# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/mui
pkglibdir = $(libdir)/mui
pkgincludedir = $(includedir)/mui
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = ${SHELL} /home/abauer/src/MIX/mui/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/abauer/src/MIX/mui/missing --run tar
AUTOCONF = ${SHELL} /home/abauer/src/MIX/mui/missing --run autoconf
AUTOHEADER = ${SHELL} /home/abauer/src/MIX/mui/missing --run autoheader
AUTOMAKE = ${SHELL} /home/abauer/src/MIX/mui/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/pango-1.0 -I/usr/X11R6/include -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GLIB_LDFLAGS = -lglib-2.0  
GTK_INCLUDE = 
GTK_LDFLAGS = -Wl,--export-dynamic -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/abauer/src/MIX/mui/missing --run makeinfo
OBJEXT = o
PACKAGE = mui
PACKAGE_BUGREPORT = alexander.bauer@micronas.com
PACKAGE_NAME = mui
PACKAGE_STRING = mui 0.0.1
PACKAGE_TARNAME = mui
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
PERL = perl
PERL5_CCOPTS =  -D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -I/usr/include/gdbm  -I/usr/lib/perl5/5.8.0/i386-linux-thread-multi/CORE 
PERL5_LDOPTS = -rdynamic -Wl,-rpath,/usr/lib/perl5/5.8.0/i386-linux-thread-multi/CORE  -L/usr/local/lib /usr/lib/perl5/5.8.0/i386-linux-thread-multi/auto/DynaLoader/DynaLoader.a -L/usr/lib/perl5/5.8.0/i386-linux-thread-multi/CORE -lperl -lnsl -ldl -lm -lpthread -lc -lcrypt -lutil
PKG_CONFIG = /usr/bin/pkg-config
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.0.1
ac_ct_CC = gcc
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/abauer/src/MIX/mui/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

bin_PROGRAMS = mui

mui_SOURCES = \
	main.c \
	mix.c mix.h \
	mainwindow.c mainwindow.h \
	hiertree.c hiertree.h \
	tableview.c tableview.h \
	tablewindow.c tablewindow.h \
	callbacks.c callbacks.h \
        support.c support.h \
	settings.c settings.h \
	options.h


mui_CPPFLAGS =  -D_REENTRANT -D_GNU_SOURCE -DTHREADS_HAVE_PIDS -DDEBUGGING -fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -I/usr/include/gdbm  -I/usr/lib/perl5/5.8.0/i386-linux-thread-multi/CORE 

mui_LDADD = -Wl,--export-dynamic -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   -rdynamic -Wl,-rpath,/usr/lib/perl5/5.8.0/i386-linux-thread-multi/CORE  -L/usr/local/lib /usr/lib/perl5/5.8.0/i386-linux-thread-multi/auto/DynaLoader/DynaLoader.a -L/usr/lib/perl5/5.8.0/i386-linux-thread-multi/CORE -lperl -lnsl -ldl -lm -lpthread -lc -lcrypt -lutil -lglib-2.0  
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = mui$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_mui_OBJECTS = mui-main.$(OBJEXT) mui-mix.$(OBJEXT) \
	mui-mainwindow.$(OBJEXT) mui-hiertree.$(OBJEXT) \
	mui-tableview.$(OBJEXT) mui-tablewindow.$(OBJEXT) \
	mui-callbacks.$(OBJEXT) mui-support.$(OBJEXT) \
	mui-settings.$(OBJEXT)
mui_OBJECTS = $(am_mui_OBJECTS)
mui_DEPENDENCIES =
mui_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/mui-callbacks.Po \
	./$(DEPDIR)/mui-hiertree.Po ./$(DEPDIR)/mui-main.Po \
	./$(DEPDIR)/mui-mainwindow.Po \
	./$(DEPDIR)/mui-mix.Po ./$(DEPDIR)/mui-settings.Po \
	./$(DEPDIR)/mui-support.Po \
	./$(DEPDIR)/mui-tableview.Po \
	./$(DEPDIR)/mui-tablewindow.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(mui_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am config.h.in
SOURCES = $(mui_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
mui$(EXEEXT): $(mui_OBJECTS) $(mui_DEPENDENCIES) 
	@rm -f mui$(EXEEXT)
	$(LINK) $(mui_LDFLAGS) $(mui_OBJECTS) $(mui_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/mui-callbacks.Po
include ./$(DEPDIR)/mui-hiertree.Po
include ./$(DEPDIR)/mui-main.Po
include ./$(DEPDIR)/mui-mainwindow.Po
include ./$(DEPDIR)/mui-mix.Po
include ./$(DEPDIR)/mui-settings.Po
include ./$(DEPDIR)/mui-support.Po
include ./$(DEPDIR)/mui-tableview.Po
include ./$(DEPDIR)/mui-tablewindow.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

mui-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-main.o -MD -MP -MF "$(DEPDIR)/mui-main.Tpo" \
	  -c -o mui-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/mui-main.Tpo" "$(DEPDIR)/mui-main.Po"; \
	else rm -f "$(DEPDIR)/mui-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='mui-main.o' libtool=no \
#	depfile='$(DEPDIR)/mui-main.Po' tmpdepfile='$(DEPDIR)/mui-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

mui-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-main.obj -MD -MP -MF "$(DEPDIR)/mui-main.Tpo" \
	  -c -o mui-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-main.Tpo" "$(DEPDIR)/mui-main.Po"; \
	else rm -f "$(DEPDIR)/mui-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='mui-main.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-main.Po' tmpdepfile='$(DEPDIR)/mui-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

mui-mix.o: mix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-mix.o -MD -MP -MF "$(DEPDIR)/mui-mix.Tpo" \
	  -c -o mui-mix.o `test -f 'mix.c' || echo '$(srcdir)/'`mix.c; \
	then mv -f "$(DEPDIR)/mui-mix.Tpo" "$(DEPDIR)/mui-mix.Po"; \
	else rm -f "$(DEPDIR)/mui-mix.Tpo"; exit 1; \
	fi
#	source='mix.c' object='mui-mix.o' libtool=no \
#	depfile='$(DEPDIR)/mui-mix.Po' tmpdepfile='$(DEPDIR)/mui-mix.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-mix.o `test -f 'mix.c' || echo '$(srcdir)/'`mix.c

mui-mix.obj: mix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-mix.obj -MD -MP -MF "$(DEPDIR)/mui-mix.Tpo" \
	  -c -o mui-mix.obj `if test -f 'mix.c'; then $(CYGPATH_W) 'mix.c'; else $(CYGPATH_W) '$(srcdir)/mix.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-mix.Tpo" "$(DEPDIR)/mui-mix.Po"; \
	else rm -f "$(DEPDIR)/mui-mix.Tpo"; exit 1; \
	fi
#	source='mix.c' object='mui-mix.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-mix.Po' tmpdepfile='$(DEPDIR)/mui-mix.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-mix.obj `if test -f 'mix.c'; then $(CYGPATH_W) 'mix.c'; else $(CYGPATH_W) '$(srcdir)/mix.c'; fi`

mui-mainwindow.o: mainwindow.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-mainwindow.o -MD -MP -MF "$(DEPDIR)/mui-mainwindow.Tpo" \
	  -c -o mui-mainwindow.o `test -f 'mainwindow.c' || echo '$(srcdir)/'`mainwindow.c; \
	then mv -f "$(DEPDIR)/mui-mainwindow.Tpo" "$(DEPDIR)/mui-mainwindow.Po"; \
	else rm -f "$(DEPDIR)/mui-mainwindow.Tpo"; exit 1; \
	fi
#	source='mainwindow.c' object='mui-mainwindow.o' libtool=no \
#	depfile='$(DEPDIR)/mui-mainwindow.Po' tmpdepfile='$(DEPDIR)/mui-mainwindow.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-mainwindow.o `test -f 'mainwindow.c' || echo '$(srcdir)/'`mainwindow.c

mui-mainwindow.obj: mainwindow.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-mainwindow.obj -MD -MP -MF "$(DEPDIR)/mui-mainwindow.Tpo" \
	  -c -o mui-mainwindow.obj `if test -f 'mainwindow.c'; then $(CYGPATH_W) 'mainwindow.c'; else $(CYGPATH_W) '$(srcdir)/mainwindow.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-mainwindow.Tpo" "$(DEPDIR)/mui-mainwindow.Po"; \
	else rm -f "$(DEPDIR)/mui-mainwindow.Tpo"; exit 1; \
	fi
#	source='mainwindow.c' object='mui-mainwindow.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-mainwindow.Po' tmpdepfile='$(DEPDIR)/mui-mainwindow.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-mainwindow.obj `if test -f 'mainwindow.c'; then $(CYGPATH_W) 'mainwindow.c'; else $(CYGPATH_W) '$(srcdir)/mainwindow.c'; fi`

mui-hiertree.o: hiertree.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-hiertree.o -MD -MP -MF "$(DEPDIR)/mui-hiertree.Tpo" \
	  -c -o mui-hiertree.o `test -f 'hiertree.c' || echo '$(srcdir)/'`hiertree.c; \
	then mv -f "$(DEPDIR)/mui-hiertree.Tpo" "$(DEPDIR)/mui-hiertree.Po"; \
	else rm -f "$(DEPDIR)/mui-hiertree.Tpo"; exit 1; \
	fi
#	source='hiertree.c' object='mui-hiertree.o' libtool=no \
#	depfile='$(DEPDIR)/mui-hiertree.Po' tmpdepfile='$(DEPDIR)/mui-hiertree.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-hiertree.o `test -f 'hiertree.c' || echo '$(srcdir)/'`hiertree.c

mui-hiertree.obj: hiertree.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-hiertree.obj -MD -MP -MF "$(DEPDIR)/mui-hiertree.Tpo" \
	  -c -o mui-hiertree.obj `if test -f 'hiertree.c'; then $(CYGPATH_W) 'hiertree.c'; else $(CYGPATH_W) '$(srcdir)/hiertree.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-hiertree.Tpo" "$(DEPDIR)/mui-hiertree.Po"; \
	else rm -f "$(DEPDIR)/mui-hiertree.Tpo"; exit 1; \
	fi
#	source='hiertree.c' object='mui-hiertree.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-hiertree.Po' tmpdepfile='$(DEPDIR)/mui-hiertree.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-hiertree.obj `if test -f 'hiertree.c'; then $(CYGPATH_W) 'hiertree.c'; else $(CYGPATH_W) '$(srcdir)/hiertree.c'; fi`

mui-tableview.o: tableview.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-tableview.o -MD -MP -MF "$(DEPDIR)/mui-tableview.Tpo" \
	  -c -o mui-tableview.o `test -f 'tableview.c' || echo '$(srcdir)/'`tableview.c; \
	then mv -f "$(DEPDIR)/mui-tableview.Tpo" "$(DEPDIR)/mui-tableview.Po"; \
	else rm -f "$(DEPDIR)/mui-tableview.Tpo"; exit 1; \
	fi
#	source='tableview.c' object='mui-tableview.o' libtool=no \
#	depfile='$(DEPDIR)/mui-tableview.Po' tmpdepfile='$(DEPDIR)/mui-tableview.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-tableview.o `test -f 'tableview.c' || echo '$(srcdir)/'`tableview.c

mui-tableview.obj: tableview.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-tableview.obj -MD -MP -MF "$(DEPDIR)/mui-tableview.Tpo" \
	  -c -o mui-tableview.obj `if test -f 'tableview.c'; then $(CYGPATH_W) 'tableview.c'; else $(CYGPATH_W) '$(srcdir)/tableview.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-tableview.Tpo" "$(DEPDIR)/mui-tableview.Po"; \
	else rm -f "$(DEPDIR)/mui-tableview.Tpo"; exit 1; \
	fi
#	source='tableview.c' object='mui-tableview.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-tableview.Po' tmpdepfile='$(DEPDIR)/mui-tableview.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-tableview.obj `if test -f 'tableview.c'; then $(CYGPATH_W) 'tableview.c'; else $(CYGPATH_W) '$(srcdir)/tableview.c'; fi`

mui-tablewindow.o: tablewindow.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-tablewindow.o -MD -MP -MF "$(DEPDIR)/mui-tablewindow.Tpo" \
	  -c -o mui-tablewindow.o `test -f 'tablewindow.c' || echo '$(srcdir)/'`tablewindow.c; \
	then mv -f "$(DEPDIR)/mui-tablewindow.Tpo" "$(DEPDIR)/mui-tablewindow.Po"; \
	else rm -f "$(DEPDIR)/mui-tablewindow.Tpo"; exit 1; \
	fi
#	source='tablewindow.c' object='mui-tablewindow.o' libtool=no \
#	depfile='$(DEPDIR)/mui-tablewindow.Po' tmpdepfile='$(DEPDIR)/mui-tablewindow.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-tablewindow.o `test -f 'tablewindow.c' || echo '$(srcdir)/'`tablewindow.c

mui-tablewindow.obj: tablewindow.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-tablewindow.obj -MD -MP -MF "$(DEPDIR)/mui-tablewindow.Tpo" \
	  -c -o mui-tablewindow.obj `if test -f 'tablewindow.c'; then $(CYGPATH_W) 'tablewindow.c'; else $(CYGPATH_W) '$(srcdir)/tablewindow.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-tablewindow.Tpo" "$(DEPDIR)/mui-tablewindow.Po"; \
	else rm -f "$(DEPDIR)/mui-tablewindow.Tpo"; exit 1; \
	fi
#	source='tablewindow.c' object='mui-tablewindow.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-tablewindow.Po' tmpdepfile='$(DEPDIR)/mui-tablewindow.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-tablewindow.obj `if test -f 'tablewindow.c'; then $(CYGPATH_W) 'tablewindow.c'; else $(CYGPATH_W) '$(srcdir)/tablewindow.c'; fi`

mui-callbacks.o: callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-callbacks.o -MD -MP -MF "$(DEPDIR)/mui-callbacks.Tpo" \
	  -c -o mui-callbacks.o `test -f 'callbacks.c' || echo '$(srcdir)/'`callbacks.c; \
	then mv -f "$(DEPDIR)/mui-callbacks.Tpo" "$(DEPDIR)/mui-callbacks.Po"; \
	else rm -f "$(DEPDIR)/mui-callbacks.Tpo"; exit 1; \
	fi
#	source='callbacks.c' object='mui-callbacks.o' libtool=no \
#	depfile='$(DEPDIR)/mui-callbacks.Po' tmpdepfile='$(DEPDIR)/mui-callbacks.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-callbacks.o `test -f 'callbacks.c' || echo '$(srcdir)/'`callbacks.c

mui-callbacks.obj: callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-callbacks.obj -MD -MP -MF "$(DEPDIR)/mui-callbacks.Tpo" \
	  -c -o mui-callbacks.obj `if test -f 'callbacks.c'; then $(CYGPATH_W) 'callbacks.c'; else $(CYGPATH_W) '$(srcdir)/callbacks.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-callbacks.Tpo" "$(DEPDIR)/mui-callbacks.Po"; \
	else rm -f "$(DEPDIR)/mui-callbacks.Tpo"; exit 1; \
	fi
#	source='callbacks.c' object='mui-callbacks.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-callbacks.Po' tmpdepfile='$(DEPDIR)/mui-callbacks.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-callbacks.obj `if test -f 'callbacks.c'; then $(CYGPATH_W) 'callbacks.c'; else $(CYGPATH_W) '$(srcdir)/callbacks.c'; fi`

mui-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-support.o -MD -MP -MF "$(DEPDIR)/mui-support.Tpo" \
	  -c -o mui-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/mui-support.Tpo" "$(DEPDIR)/mui-support.Po"; \
	else rm -f "$(DEPDIR)/mui-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='mui-support.o' libtool=no \
#	depfile='$(DEPDIR)/mui-support.Po' tmpdepfile='$(DEPDIR)/mui-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

mui-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-support.obj -MD -MP -MF "$(DEPDIR)/mui-support.Tpo" \
	  -c -o mui-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-support.Tpo" "$(DEPDIR)/mui-support.Po"; \
	else rm -f "$(DEPDIR)/mui-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='mui-support.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-support.Po' tmpdepfile='$(DEPDIR)/mui-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

mui-settings.o: settings.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-settings.o -MD -MP -MF "$(DEPDIR)/mui-settings.Tpo" \
	  -c -o mui-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c; \
	then mv -f "$(DEPDIR)/mui-settings.Tpo" "$(DEPDIR)/mui-settings.Po"; \
	else rm -f "$(DEPDIR)/mui-settings.Tpo"; exit 1; \
	fi
#	source='settings.c' object='mui-settings.o' libtool=no \
#	depfile='$(DEPDIR)/mui-settings.Po' tmpdepfile='$(DEPDIR)/mui-settings.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c

mui-settings.obj: settings.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mui-settings.obj -MD -MP -MF "$(DEPDIR)/mui-settings.Tpo" \
	  -c -o mui-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`; \
	then mv -f "$(DEPDIR)/mui-settings.Tpo" "$(DEPDIR)/mui-settings.Po"; \
	else rm -f "$(DEPDIR)/mui-settings.Tpo"; exit 1; \
	fi
#	source='settings.c' object='mui-settings.obj' libtool=no \
#	depfile='$(DEPDIR)/mui-settings.Po' tmpdepfile='$(DEPDIR)/mui-settings.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mui-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
