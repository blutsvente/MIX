#
# Issue List
#
# $RCSfil$
# $Id: TODO.txt,v 1.33 2004/04/15 11:58:41 wig Exp $
#
Major: IO sheet processing!!

Doku:
    App Note:
        Describe macro usage
        Describe generator usage
        Describe use
        Describe command line switches
        Describe mix.cfg
        Describe CONF sheet

Hint: Use "recode pc..lat1 *.vhd" for easy and fast DOS2UNIX converter

TODOs:

- 20040415a/Req: add "ignorecase" for delta mode
  Usefull for verify entity. Split options for delta mode and verify mode.

  Req: mpit
  Prio: medium

- 20040407a/Req: Improve coding:
    header:

#!/bin/sh -- # -*- perl -*- -w
# TODO: Get better startup (look in FAQ ...)

eval 'exec $M_PERL -S $0 ${1+"$@"}'
if 0; # dynamic perl startup; suppress preceding line in perl

# eval '(exit $?0)' && eval 'exec perl -S $0 ${1+"$@"}' || eval 'exec perl -S $0 $argv'
# if 0; # dynamic perl startup

and

mix_0.pl header:
    $pgm  <- basename $0    -> Script
    $base <- path to $0 and one level up    -> dirname(Bin) 
    $pgmpath <- path where $0 comes from  -> Bin
    $dir  <- cwd()

Example:
 perl -d mix_0.pl
    gives
  DB<1> x $dir
0  'H:\\work\\mix_new\\MIX'
  DB<2> x $pgm
0  'mix_0.pl'
  DB<3> x $0
0  'mix_0.pl'
  DB<4> x $pgmpath
0  'H:\\work\\mix_new\\MIX'
  DB<5> x $base
0  'H:\\work\\mix_new'
  DB<6>

  DB<9> x $FindBin::Bin
0  'H:/work/mix_new/MIX'
  DB<10> x $FindBin::Script
0  'mix_0.pl'

another example:
  DB<1> x $dir
0  'H:\\work\\mix_new\\MIX'
  DB<2> x $pgm
0  'mix_0.pl'
  DB<3> x $pgmpath
0  'h:\\work\\mix_new\\mix'
  DB<4> x $base
0  'h:\\work\\mix_new'
  DB<5> x $0
0  'h:\\work\\mix_new\\mix\\mix_0.pl'
  DB<6> use FindBin

  DB<7> x $FindBin::Bin
0  'h:/work/mix_new/mix'
  DB<8> x $FindBin::Script
0  'mix_0.pl'

use vars qw($pgm $base $pgmpath $dir);

$dir = "";
($^O=~/Win32/) ? ($dir=getcwd())=~s,/,\\,g : ($dir=getcwd());

# Set library search path to:
#   \PATH\PA\prg
#    use lib \PATH\PA\lib\perl
#    use lib \PATH\lib\perl
#    use lib `cwd`\lib\perl
#    use lib `cwd`..\lib\perl
# ...
BEGIN{
    ($^O =~ /Win32/io ) ? ($dir=getcwd())=~s,/,\\,g : ($dir=getcwd());    

    ($pgm=$0) =~s;^.*(/|\\);;g;
    if ( $0 =~ m,[/\\],o ) { #$0 has path ...
        ($base=$0) =~s;^(.*)[/\\]\w+[/\\][\w\.]+$;$1;g;
        ($pgmpath=$0) =~ s;^(.*)[/\\][\w\.]+$;$1;g;
    } else {
        ( $base = $dir ) =~ s,^(.*)[/\\][\w\.]+$,$1,g;
        $pgmpath = $dir;
    }
}

use lib "$base/";
use lib "$base/lib/perl";
use lib "$pgmpath/";
use lib "$pgmpath/lib/perl";
use lib "$dir/lib/perl";
use lib "$dir/../lib/perl";
#TODO: Which "use lib path" if $0 was found in PATH?

# *.pm header:

# Caveat: relies on proper setting of base, pgmpath and dir in main program!
use lib "$main::base/";
use lib "$main::base/lib/perl";
use lib "$main::pgmpath/";
use lib "$main::pgmpath/lib/perl";
use lib "$main::dir/lib/perl";
use lib "$main::dir/../lib/perl";

should be better

 use FindBin;
 use lib "$FindBin::Bin/../lib";

- 20040401f/Req: add ::option column to all sheets
    Keep all options there, e.g. the %UAMN% (use configuration as module name)
    Allow VAR=VAL,VAR=VAL, ... pairs to be specified there, valid just for current
       line

    Req: wig
    Prio: low
    Plan:

- 20040401e/Req: Improve import feature:
    - Verilog
    - VHDL architecture

    Req: wig
    Prio: low
    Plan:

- 20040401d/Req: Add -flatten option
    Remove all hierachy, leave just leaf and top node -> in intermediate

    Req: wig
    Prio: low
    Plan:

- 20040401c/Req: Create pseudo block diagram / EXCEL
    Create GIF image of module
    Create HTML description
    Create PDF description

    Req: wig
    Prio: low
    Plan:

- 20040401b/Req: Write hierachy sheets per module ...

    Write a hierachy sheet for each non-leaf module
    
    Req: wig
    Prio: low
    
- 20040401a/Check: VHDL typecast in port maps, HOWTO

    ask in comp.language.vhdl

    Example:
	component inst_aa	-- typecast module
		port (
			port_a_1	: out	std_ulogic;
			port_a_3	: out	std_ulogic_vector(7 downto 0);
			signal_2	: out	std_logic;
			signal_4	: out	std_logic_vector(15 downto 0)
		);
	end component;
			signal	signal_1	: std_logic; 
			signal	signal_2	: std_ulogic; 
			signal	signal_3	: std_logic_vector(7 downto 0); 
			signal	signal_4	: std_ulogic_vector(15 downto 0); 

		inst_aa_i: inst_aa
		port map (
			std_logic(port_a_1) => signal_1,
			std_logic_vector(port_a_3) => signal_3,
			std_ulogic(signal_2) => signal_2,
			std_ulogic_vector(signal_4) => signal_4
		);

Possible cases:
    in
    out
    inout ???
    
My short-ref say typecast is allowed in portmaps, but tool doesn't like it (at least some
of the tools).

See test/typecast.xls

    Req: mpit
    Prio: medium
    Solution: contact comp.lang.vhdl
    

-20040330a/Bug: Message "WARNING: Bad branch taken in parse_io_init, file bug report!"  is not descriptive!

    Req: mpit
    Prio: medium
    Solution: rewrite error message with "No iocell and pad type defined in line XXXX, skipped!"
    

-20040324a/Req: Define %AUTO% signal name
    wires according to rules e.g.:
        ::name := PRE_MODULEFROM[_MODULETO]_PORT
    combined with -import -> create wires automatically

    Req: wig20040324

- 20040217/Req: Add a "compare entities" facility.

  -verify PATH[:PATH]
  -> reads in all filenames in PATH and if this name matches a entity to create, do a
  diff instead.


- 20040128a/Req: plugin-interface
  allow definition of arbitryry plugins
    define sheets to parse
    define set of standard functions to be provided by plugin
    define call location

    Req: wig
    
- 20040127a/Req: Sort entity and signals by
   - order given from input-sheet
   - order by bundle
   - order by plugin function
   - order by number (e.g. ::sortval)
   - order by string (default)
   make sure generated signals are written en-bloc at end/beginning or sorted, too

    Req: mpit

- 20040127b/Req: Leaf cell compare
   take input argument: -leaf-path (or -conf ...leaf.path) to be colon seperated path list
   and compare all generated entities against the files to be found in that path
   (reuse delta mode capabilites).
   Define -conf check.leaf ( -> path)

   Req: mpit

- WinCVS weigert sich aufobskure Art und Weise Dateien einzuchecken ...



- 20031215c/Req: Do not generate a mux-port if no mux cells are defined for
   an entity (only one cell filled in)

    Req: mpit
    Prio: medium
    Workaround: specify "%NOSEL%"



- 2003113a/Req:
    Fix warning messages:

> meinst Du Meldungen ala:
> 
> Entity port type mismatch for entity iocell (video_o12_ioc), 
> port core_rl_o: std_ulogic was std_ulogic_vector
> 
> Ja, das ist "nur" eine Warnung. Kommt daher dass MIX denkt da 
> soll ein Bus angeschlossen werden (rl_boot_sel),
> tatsaechlich aber nur ein Bit davon an den Port kommt.

    Req: wig
    Prio: low

-20031112b/Req: Add table row counter to internal data and print that out if applicable
    Will ease debugging (e.g. ::inputrow ...)

    Req: wig
    

- 20031110a/Bug: Leave in dummy wires for open output port splices
    Description: in verilog we need to have wires for open ports ....

    //  __I_OUT_OPEN wire		dummy_pad100_1	;  // __W_BAD_BRANCH
    Req: wig
    Testcase: mde_d-tlgold
    Prio: Low
    
- 20031106a/Req: Compare generated entities against existing one

    e.g. take all leave entities and try to find appropriate source files in the
    current directory or in a given "models" directory
    Ev. use the VHDL-Parser Perl-Package

    Req: wig, mpit
    Prio: medium

- 20031008g/Bug: -import leaves created file open

    Req: wig
    Prio: low
    Solution: not a bug, but a feature -> init and start editing :-)
        to close, set conf import.close.after.init


- 20031008d/Req: Maybe one could import architecture/port map's, too?

    Req: wig
    Prio: low

- 20031008c/Req: Import Verilog modules (similiar to VHDL modules).

    Req: wig
    Prio: low


- 20031008a/Bug: COMB and -delta mode produce rubbish ...
    
    Testcase: t/conf.xls
    Req: wig
    Prio: low
    
- 20031007b/Req: condense Warnings
    e.g. only print first 5 of the same warning to screen, rest to logfile, only.
    Summarize number then.

    Req: mpallas
    Prio: low

- 20030908b/Req: coding guide

    Gibt es eine MÃ¶glichkeit, die intern erzeugten Signale den Coding Guidelines anzupassen?

    <instname>2<instname>_<name>   from inst to inst
    top_<name>			     from top
    <instname>2top_<name>

    Req: m kropfitsch
    Prio: low
    

- 20030801a/Bug: Detect spaces in ::high and ::low and remove them!

    Req: wig
    Prio: high (causes MIX to break and produce bad results and warnings ...)


- 20030730c/Req: Ident made more flexible:

    Allow to configure identation and use \t or " " or whatever.
    E.g. use a macro.S and then a counter like fi=0 fi=+1 ...
    Make per function or output group ident possible.

    
    Req: mpallas
    Prio: low    
    Solution: implement $EH{'macro'}{'%S%'} = ... and put in instead of fixed indents.
            get function mix_ident( N ) N being 0...N (e.g. 10) and or +/-N stepping in/out


- 20030725b/Req: Add comments to signal names ....

Ich danke dir fuer die bisherige Hilfe, habe aber noch ein Problem
Wie ist es moeglich ein Kommentare im VHDL-File anzuzeigen.
Es waere sehr hilfreich Beschreibungen wie folgt darzustellen:

z.B. IN EINER ENTITY

  field_p0_i      :  IN STD_ULOGIC                  --field signal ('0' if A-field)   WIE KOMMT MAN ZUM KOMMENTAR

    Req: Kropfitsch
    Prio: medium
    Issue: There is no direct link between a entity/port names and a signal! Comments will be set in port map
        

- 20030715b/Req: IOP: "get_next IOcell" (for given name/number ::pad)
    will allow to set up NAND-Trees easily

    Req: mpallas
    Prio: medium

    Idea: define some commonly usable functions working on the
      %hierdb and ::conndb
      next_iop
      next_ioc(::pad

        eval( $hierdb{::inst[::pad + 1]}

    Woraround: define youe own column in the input sheet and use the macro facility to
              match against this column!

- 20030712c/Req: only generate pad, no IO cell
    But how to connect that?

    Req: mpit
    Prio: medium
    Workaround: Instantiate and connect in HIER and CONN sheets manually

- 20030702c/Req: compare leaf blocks generated with entity definitions
    Req: mpit
    Prio: medium

- 20030630c/Bug: Complain if someone uses VHDL keywords as signal names, e.g.
    "signal". The built-in list seems to be ignored.

    Todo: make sure list ist getting evaluated and corrected accordingly.
    Add "check_reservedwords" function to MixChecker.pm and
    insert into add_inst and add_hier ....

    See also _check_keywords function in MixParser.pm!
    
    Req: wig
    Prio: medium
    
- 20030630b/Req: Compare MIX against
    -- Ganove
    -- HDL Designer / Mentor Grafics
    -- Spinner / Duolog (see Claus Schneider, 2003-06-06)

- 20030404g/CR: add open signals to %TOP%, e.g. if no ::in or ::out
is defined.

    Req: wig
    Prio: medium

- 20030404f/CR: if %TOP% is used in ::out or ::in, figure out top level
  and wire to that. Another way to specify wiring to top level is to
  use I and O as mode definitions for signals.

    Req: wig
    Prio: medium
    
- 20030404e/CR: add -conf script.post SCRIPT and -conf script.pre SCRIPT
  configuration. pre will be executed before anything else is done.
  post jsut before MIX ends. If pre script returns an exit code different from 0,
  MIX will exit with this error code. post script return code will be taken as MIX
  return code.

    Req: wig
    Prio: low
    Solution: started, but never tested ...


- 20030404c/Int: Improve tests
    split all tests in frontend/backend
    Req: wig
    Prio: medium

- 20030404d/CR: -inplace option
    Take previous results and keep user changed contents (marked properly)
    if possible.
    aka. read in existing blocks and just rewrite mix generated data.
    Requires: appropriate framing

    Req: wig
    Prio: low
    Solution: use alvailable sheets as default

- 20030313g/Bug: Improve Load/Driver evaluation
   If port width ne signal width, count "bit"wise. Save instead of integers
   into the AEPORT data structure. Add MIN,MAX,ALL fields.
   (Stick to bits functions like B::00iioo, F::foo:T::bar or A::)

    Req: wig
    Prio: medium

- 20030228d/Feature: generate hierachical sheets
    Req: Claus
    Prio: Low

- 20030227b: Check if signal ends in an intermediate hierachy
    Requested: wig
    Prio: medium
 

- 20030220i: Rewrite writers:
    -- Output into hash %outfiles{FILENAME}
    -- Fix DOS/UNIX CR issue

- 20030220j: Use Bugzilla for issues 

- OPEN wires to external
  wig20030124a

- Implement extended range definitions for generator like:
    $i (1,7,13..15 )
  requested by sb20030117

- Implement second run parameter $j for generator like:
    $j (1..17), $i (1,3,5,20), /blablubber/
    requested by sb20030117

- iN_foo N := 1.. number of instances of entity foo.

- output separate interconnect sheets for each intermediate hierachy (in addition to flat interconnect sheet) 

- 20030220b: Check: RTL architecture must be unique
  Requested by ST. Bartels
  
- 20030220c: lower case everything!
  -- global configuration variable: lc := force|check|no
  -- implement checker: see if cases sensitvitiy creates conflicts, report!
  -- if force mode -> collaps conflicts
  
  Possibly inform if a name is not unique
  Requested by M. Pallas

- 20030220d: Change EOL for -a, -e, -c files (MS-Win vs. UNIX)
  Workaround: Use script (recode)
  Prio: low
  Requested by M. Pallas

- 20030220e: Documentation + Application Note
  Application note:
        non-leaf cells multiple instantiation, how-to: global signal names localization

##########################################################
DONE: +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
##########################################################

-20040329a/Req: define constants in Verilog:

alt:
`define cpu_h_int4_reserved_c 'h0  // __I_ConvConstant2:0x0

neu:
`define cpu_h_int1_reserved_c 1'b0  // __I_ConvConstant2:0x0

    Reason: 0x0 ist konverted to hex in case of single bit signal

    Req: mpallas
    Prio: medium
    Workaround: Use a plain 0 instead!

    Solution: fixed in MixWriter 20040329

- 20040210/Req: Use configuration instead of module names within Verilog modules referencing VHDL

Update:
    Am Anfang des Files wÃ¼rde folgendes definiert:

`ifdef MAGMA
  `define cgu_inst_name cgu
`else
  `define cgu_inst_name cgu_rtl_c0
`endif

Die Instanziierung sÃ¤he folgendermaÃen aus:

`cgu_inst_name cgu_i1(	// Clock Generation Unit (CGU)

WÃ¤re das mit MIX machbar ?

> > ist es mÃ¶glich bei der Instanziierung von VHDL-Komponenten in einem
> > Verilog-Toplevel statt des Modulnamens den Konfigurationsnamen zu 
> > verwenden ?
> > 
> > Beispiel (Modulinstanziierung der CGU im MDE-D Toplevel):
> > bisher:
> > ...
> > cgu cgu_i1 (...)
> > ...
> > 
> > was wir mÃ¶chten:
> > ...
> > cgu_rtl_c0 cgu_i1 (...)
> > ...
> > 
> > Der Konfig-Name ist normalerweise aus dem Hierarchie-Sheet 
> ableitbar.
> > 

Proposal:
    Need to change generation of %INSTANCES% in verilog mode if module to be used is
    VHDL and config parameter generate.output.verilog =~ m,useconfname,
Unfortunately this needs to be made tool sensitive (aka. 'defines).

Done 20040322, wig

Solution:
    1. set "output.generate.verilog" to  "usemodulename" -> ::config value will be used as
        module name for all VHDL modules.
    2. Otherwise append a %USEASMODULENAME% (%UAMN%) tag in the ::config column of the
        of the module you want to use the VHDL configuration name as module name.
    This only applies to the usage of such modules in parent modules.
    This naming does not work with certain tools, e.g. for Magma. Therefore the
    'output.generate.verilog.workaround.magma' is set to "useasmodulename_define". This
    will add appropriate Verilog define statements.

- 20031218a/Req: IO should not wire inout ports to TOP (which is the default now)
    solution: introduce a new keyword (instead of S, maybe SIO ...)
    solution2: mark in ::in and/or ::out coloum:
    solution3: add a configuration variable "do not wire to TOP" ... contains RE with matching
	signals -> should be excluded ...
	output.generate.xinout signal_a,signal_b,.... allow reg-ex)

    Globally one can use the configuration (remove the default "mode" keyword)
	output.generate.inout ""
    Maybe mode can be extended to
	io_mode, i_mode, o_mode, ... (the leading part would match the signal ::mode)
	all_mode (io, i, o)

    There exists already the
	B buffer
	S signal
	IO inout (with top level connection)
	I   in (wire to top level)
	O  out (wire to top level)
	G generic
	P parameter
	C constant

    Req: mpit
    Prio: medium
    Workaround: use global configuration and wire required other signals manually to top
    Solved: 20031220, wig (output.generate.xinout )
    
- 20031215b/Bug: VGCA rule make MIX die

....
03/12/15 10:44:21 6128: WARNING: EXCEL_DIFF with different headers useless!
03/12/15 10:44:21 6128: Rotating 3 old sheets of DIFF_CONN!
03/12/15 10:44:22 6128: WARNING: Limit length of cell to save 1200 characters: G
 # i = 48 #$i(33..232),/iom_(.*
03/12/15 10:44:22 6128: WARNING: Limit length of cell to save 1200 characters:
# i = 132 #$i(33..232),/iom_(.*
03/12/15 10:44:22 6128: WARNING: Limit length of cell to save 1200 characters: i
 = 91 #$i(33..232),/iom_(.*)::p
03/12/15 10:44:22 6128: WARNING: Limit length of cell to save 1200 characters: =
$i/G # i = 170 #$i(33..232),/io
03/12/15 10:44:22 6128: WARNING: Limit length of cell to save 1200 characters: /
G # i = 96 #$i(33..232),/iom_(.
Win32::OLE(0.1502) error 0x80020009: "Ausnahmefehler aufgetreten"
    in PROPERTYPUT "Value" at H:\work\mix/lib/perl/Micronas/MixUtils.pm line 3227

Triggered by rule in CONN_IO / line 107
	$i(33..232),/iom_(.*)::pin=$i/		Data	async	std_ulogic				scan_en_i		iom_$1/scan_en_i

    Reason: Might get triggered by a leading = in a cell (excel sees bad formula??)
	Could not be reproduced after several hours of debugging.

    Req: mpit
    Prio: high
    Solution: solved or disappeared (by limiting the cell length?) (20040322)

- 20031215a/Bug: addind ::iodir column fails
    Error message:

Can't use an undefined value as an ARRAY reference at H:\work\mix/lib/perl/Micro
nas/MixUtils.pm line 2196.

    Req: mpit
    Example: vgca_20031215/VGCA_IO.xls
    Prio: high
    Testcase:

    Solved: 20040100, was a bad initialization.

- 20031112a/Bug: ExCEL returns
   Win32::OLE::Variant=SCALAR if a cell has a formula with errors. Please detect and consider
  that when opening a sheet.

    Req: mpallas
    Prio: low
    Workaround: Fix EXCEL spreadsheet!
    Solution: parse input at open time and fix/ignore that!

- 20030725a/Bug: config file names are not according standard ...
    Might be bad setup, though.
    
WEITERS WUERDE ICH EMPFEHLEN DIE CONFIGURATION-DATEI ENTSPRECHEND DEN CODING GUIDLINES ZU BENENNEN

<ENTITY-NAME>-<ARCHITECTURE-NAME>-<CONFIGURATION-NAME>-C,VHD

    Req: Kropfitsch
    Prio: Medium
    Testcase: k:\projects\mix\examples\di_tnr
    Fixed: wig20030728 (bug in filename creation ...)
    Testcase: vgca_20030723 (hand test)
    
- 20031107a/Req: Create dummy signals for open bus port splices in Verilog.
    Elaborate stage fails when it sees 1'bz as input to output port :-(
    
    Req: mpallas
    Prio: high
    Status: solved wig20031110

    
- 20031105a ExCEL: Check ALL cells if they are to large (::comment, ::descr ...)
    Req: mpallas
    Prio: high
    Resolved: wig20031106
    
- 20031104a Generated port names/Verilog
  - disable _N_N  (make configurable)
        - assume only this signal(portion), flag duplicates!
        - always generate full width bus, assign open(s)
  - check why assign and wire are generated (example from mpallas)
  Examples: MDED-Goldtl.xls
  
  gdmack_io_0_0   (only signal, no bus!)
    Reason: "0" ne "" -> now assume single bit bus 0 downto 0 is a bit, not a bus.
    
  assign cadc_clk = cadc_clk;
  Reason: internal port name still ahs the %EMPTY% in it ... needs early expansion!

    Req: mpallas
    Prio: high
    Resolved: wig20031106

- 20031015a/Doc: document macro processing

Simple text macros

Text marked with with a % on both sides is subject to be replaced, if a macro or a postfix
of that name is defined. See the table of predefined macros. Additionally the contents of
the input table can be referenced like %::column_head%. If no suitable text macro is
found, the text will be left as is.
The text macro replacement does not operate recursively in general.

Please consider that some text macros are used internally and some have a special meaning, too. E.g.
the pseudo signals %OPEN% and %LOW_BUS%.

xxx tabelle mit gebrÃ¤uchlichen macros xxx

Connection macros

To simplify the wiring of standard interfaces, MIX provides the connection macro facility.
The connection macros are entered just like any other connection, but are marked by
MH, MD and MX in the ::gen column. MH is the macro header line, which has to be followed
by one to many MD macro definition row. The first non-comment line without a MD tag stops
the macro definition.

The tag MX marks lines subject to be macro expanded. The macro expansion takes place after the
initial tables were parsed.

You can define simple, one-letter variabes in the macro cells. Any text in ::ign, ::gen,
::comment and ::descr cells of a MH and MX row will not be subject to matching and evaluation,
but be ignored. Apart from that the column names have no special meaning.

A simple example will illustrate the connection macro usage.
::ign  ::gen ::cola ::colb  ....
	MH	$n	                $1	        $h      alarm_time_$4_$5				
	MD	Uddrv_gen_$n	$1	        $h      alarm_time_$4_$5		d_$4_$5/alarm_time(3:0)	Display storage buffer $n $4_$5	
	MD	Uddrv_gen_$n	$1	        $h      current_time_$4_$5		d_$4_$5/current_time(3:0)	Display storage buffer $n $4_$5	
	MD	Uddrv_gen_$n	$1	        $h      key_buffer_$n		d_$4_$5/key_buffer(3:0)	Display storage buffer $n $4_$5	
	MD	Uddrv_gen_$n	$1	        6       display_$4_$5	d_$4_$5/display(6:0)		Display storage buffer $n $4_$5	
	MD	Uddrv_gen_$n	$1	        $h	alarm	d_$4_$5/sound_alarm=($n)	u_and_f/y($n)=($n)	Display storage buffer $n $4_$5	
	MX	0	                Display	3	alarm_time_ls_min				
	MX	1	                Display	3	alarm_time_ms_min				

Here the macro header MH defines the variables $n, $1, $h, $4 and $5. The MIX parser extracts the
MH row and accompanying MD rows (five lines here) from the table. In a second run each MX row
will trigger a match operation against all MH definitions. MX and MH are a match, if each
cell defined in the MH row has a matching counterpart in the MX row.
Variables in the MH cells are considered to match any string ( .+ in perl regular expression syntax).

Thus the first MX line matches the MH lines here. The variables defined in the MH cells are assigned
the matching values from the MX line. E.g. $n will be 0 for the first MX, 1 for the second. The variable $4
is assignd ls, $5 is min.

If MX and MH match, the accompanying MD lines are executed. Variables are replaced by the value
they are assigned too, currently. Here the first MX will result in the following table to be generated:
    
	G_MX	Uddrv_gen_0	Display	        3      alarm_time_ls_min		d_ls_min/alarm_time(3:0)	Display storage buffer 0 ls_min	
	G_MX	Uddrv_gen_0	Display	        3      current_time_ls_min		d_ls_min/current_time(3:0)	Display storage buffer 0 ls_min	
	G_MX	Uddrv_gen_0	Display	        3      key_buffer_0		    d_ls_min/key_buffer(3:0)	        Display storage buffer 0 ls_min	
	G_MX	Uddrv_gen_0	Display	        6   	display_ls_min	            d_ls_min/display(6:0)		Display storage buffer 0 ls_min	
	G_MX	Uddrv_gen_0	Display	        3	alarm	d_ls_min/sound_alarm=(0)	u_and_f/y(0)=(0)                Display storage buffer 0 ls_min	

The ::gen column is set to G_MX after evaluation. Empty cells in MD lines are filled with the value given
by MX, if any.

Please see the contrib directory for commonly available connection macros (t.b.d.).

### conn and hier genn ###
::COL::::COLB::

title: hierachy generator operators

Another powerfull feature of MIX are the generator statements. The generators are applied after initial
tool setup and connection macro evaluation, first the hierachy generators, then the connection generators.

Generators are defined in the ::gen column. Basically three types are available:

+ Constructor generators: $i(N..M)

+ Match generator: /match_expression/

+ Bounded match generator: $i(N..M),/match_expression/

match_expression is like perl(1) regular expressions, but with some extensions and specials.


++ Constructor generator statement

MIX takes the variable and the range definied in ::gen and evaluates the rest of the row for each
value in the range. Currently only one variable is allowed and the range has to be of form (N..M).

A simple example illustrates the usage:

::gen		::variants	::parent	::inst		::lang	::entity	::config
$i(1..10)			inst_a	inst_$i	VHDL		inst_$i_e	inst_$i_e_rtl_conf

will give ten instances from inst_1 to inst_10, each being a submodule of inst_a with each having a
entity inst_1_e to inst_10_e, dito. for the configuration. Simple arithmetic can be applied to derive values
from the run time parameter $i.
Constructor's will yield new instances. An instance name has to be given in the ::inst column.

++ Match generator:

For each instance defined up to now, match_expression is evaluated. If this yields true, the line
is executed. Parts of the expression in parantheses are used to set the variables $1, $2, ... accordingly.
See the perl regular expression man page perlre(1) for more details. This variables can be used in the
other cells. Simple arithmetic is possible, e.g. {$i + 1} or {$1 * 2}.

A match generator will yield new instances only if the name in the ::inst column is set to a value
different from the matching instance.

Example:

XXX t.b.d.

++ Bounded match generator

By adding a run variable and a range $i(N..M), match generators can be restricted to only apply if the
variable $i is within the range. $i has to be defined in match_expression and will match any number. 

In opposite to the constructor generator, MIX will not evaluate all possible values for $i, but only
make sure $i stays within the bounds of the range.

Example:

XXX t.b.d.

++ Advanced features of the match generators
The match expression can contain references to all fields of the to match object with the
::NAME_OF_COL=string(match):: reference.

E.g. the connection generator

::gen						::type		::iname	::out			::in
$i(270..302),/iom_(.*)::pin=$i/	std_ulogic		i_$i_{$i+1}	iom_$1/serial_o
$i(271..303),/iom_(.*)::pin=$i/	std_ulogic		i_{$i-1}_$i				iom_$1/serial_i

will wire all instances iom_.* having a property ::pin in the given range of 270 to 302, with a newly defined signal
i_N_{N+1}. iom_foo with ::pin = 270 port serial_o will drive the signal i_270_271, the instance
iom_bar with ::pin = 271 is connected to the signal i_270_271 to it's port serial_i by the next line.
for instance iom_foo only the first line matches, thus that module will net get a connection to serial_i by
these generator lines.

A trainling :: can be omitted. If two propertied are to be matched, this will look like
/::prop1=(.*)::::prop2=string(match?)/


++ Match generators work the same way on the CONN sheets. By default the match expression
will match against all defined instances, not connections.
To make a match expression iterate over all connection, prefix the whole expression by the CONN:
keyword.


Please have a look into the distributed howto.xls and the macro.xls in the text case directory t
to see more examples.

- 20030404a/CR: add -dan option : delta and new
    rename old files (*.vhd)
    create new files (*.vhd)
    create diff files (*.vhd)
    will update FOO-mixed.xls accordingly
    Req: wig
    Prio: low
    Solution: -bak and -delta options ... only applicable to HDL files
    Solved: wig20031014

- 20030516a/Bug: bus-port which has only single bit inputs gets connected incorrect

    Testcase: bug20030516
    Req: wig
    Prio: High
    Solved: yes (when, how?)

- 20030604b/Req: Allow other keywords to match in generator/macros, not only ::inst
  names.

    Req: wig
    Prio: medium
    Solved: Additionally you can use CONN, now as prefix to iterate over the conndb!
            e.g. CONN,$i...,/abc/ ...

- 20030724b/Bug: dbo_o: generates busses with std_ulogic_vector with undefined width!

			signal	dbo_15_do	: std_ulogic; 
			signal	dbo_15_en	: std_ulogic
			signal	dbo_o	: std_ulogic_vector; 
			signal	dgo_10_di	: std_ulogic; 
			signal	dgo_10_do	: std_ulogic; 
			signal	dgo_10_en	: std_ulogic;

    Possible solution: connect unused ports to "open"!
    
    Req: mpit
    Prio: high
    Solved: wig20031010
    Testcase: autoopen


- 20031008b/Req: Add ::descr to signals, too
    Define places to go:
        - entity
        - port map
        - signal
        - ....

    Req: wig
    Prio: low
    Solution: Set EH{output}{generate}{portdescr} = "%::descr%" will add the ::descr field contents
            to the port maps. Additionally you can use %::ininst%, %::outinst% or/and %::comment%
    Solvded: wig20031014

- 20030730b/Bug: %LOW_BUS% without ::high ::low definition fails ...
    Automatically create ::high and ::low matching the bits ...
    
    Req: wig
    Prio: low
    Solved: wig20030731, no testcase (really?)

- 20030728c/Bug: 3)nicht angeschlossene EingÃ¤nge ramd ?

    Req: mpit
    Prio: high
    

- 20030728d/Bug: 4)Bus-slicing

    Req: mpit
    Prio: high
    
-20030724a/Req: Wire unused signals to "open".
    If a connection was made (e.g. by a generator rule) and is not used furthermore,
    wire this port to open!
    
    Req: mpit
    Prio: low
    Solved: wig

- 20030723a/Req: Handle DI different in IO sheet (e.g. if there is only one
        applicalbe ::muxopt, do not create bus but single bit signal.

    Req: mpit
    Prio: medium
    Solved: wig (really?)

- 20030717a/Bug: Fix some verilog stuff:

einiges zur Verilog-Ausgabe:
- Verilog Anweisungen wie `define oder `timescale sollten mit
  einem "back-tick" beginnen
  
- `defines dÃ¼rfen nicht mitten im module stehen, sondern sollten 
  vor dem Header "module bla (...)" stehen

- "open" gibt es in Verilog nicht, der entsprechende Pin wird
  einfach nicht beschaltet. zB: .pinname(), ...

Nach dem Patchen scheint nun zumindest Debussy zu kompilieren !

    Req: mpallas
    Prio: high
    Fixed: wig20030726
    Testcase: misc.


- 20030407a/CR: %OPEN% net to allow wiring of ports (out) not in use.
Invent s.th. simliar for input ports (set to default H or L ???)
Resolve the conflict with wig20030124a

    Req: Pallas
    Prio: medium
    Solved: wig
    Solution: use %OPEN% or open (pseudo signal)


- 20030715c/Req: IOP: consider actual ::muxopt columns used
    e.g. if less signals are to be connected, leave rest empty

    Req: mpit
    Prio: medium
    Solved: wig
       see also 20030715a
       
- 20030715a/Req: IOP: choose one-hot or bus for select lines

    Req: mpallas
    Prio: medium
    Solution: configuration option: iocell.select bus|onehot|given

- 20030711c/Bug: signal.0 in IO cell matrix gets problems!

    Req: mpit
    Prio: high
    Solved: wig (really??)
    
- 20030630a/Bug: IO mode not handeled properly
    See example from VGCA

    Comment: Need improved connection bus handling!! Improved driver/load handling!
    Use vector{i|o} = A:[ciobt] ... c:= inout (common), i := in, o := out, b:= buffer, t := tristate
    
    Req: mpit
    Prio: high
    Solved: wig

- 20030424a/Bug:

das Signal 'nreset' wird auf den Port 'nreset' korrekt verdrahtet (Erzeugung eines
internen Signals 'int_s_reset', das an den Port und die meisten Module verdrahtet wird).
Allerdings wird auf alle internen Module bei denen der Eingangspin nicht 'nreset' heiÃt, 
der Port 'nreset' angeschlossen, was zu Compilerfehlern fÃ¼hrt.

    Testcase:
    Req: Pallas
    Prio: medium
    Testcase: nreset2.xls

- 20030313b/Bug: Cannot rename new spreadsheet to BLA-mixed.xls, if BLA-mixed
  already open in other directory. Check that and report usefull error message.
    Req: wig
    Prio: low
    

- 20030312a/Check: Find "open" input ports and report
    Req: wig
    Prio: medium

- 20030224a: Accept strings in (F:T) of ::in and ::out descriptions
  (string should be generic or constant)

- 20030221d: Accept strings as high/low bus bounds.
  wig
  See 2030224a!!

- Check if the a object (Workbook) is opened from different path, but with
  same name?
  wig20030100
  
- Use / as file name seperator, convert to other format ( \ ) on demand (wig20021219)
    Done.

- 20030908a/Req: Sort signals in output as described in input sheets

    Req: m. kropfitsch
    Prio: low
    Solution: add a counter and sort output by counter


- 20030811b/Req: port/signal mangeled:
    dbo_i -> see vgca_20030811!!

    Port gets signal assigned from external, while internal signal has the same name!!

    Req: mpit
    Prio: medium
    Solved: wig
    Testcase: autoopen, padio2

- 20030811a/Bug: Excel limits number of characters in cell to appr. 1823 ???
    hits when wrting intermediate file!!

    Req: wig
    Prio: medium
    Solution: split cells (primary key)
    Solved: wig20031001

- 20030806a/Req: use variables/text for ::high:

Ich habe folgendes Problem  
Codefragment:

constant width8      : integer := 8;
...
signal y_clkif       : std_ulogic_vector(width8-1 downto 0)

..
y_p_o        => y_clkif,
...

andere komponente

..
 y_p_i     => y_clkif,


bzw.

component upcon
  generic (
    width : integer := 8
    );
  ...
    y_p_i        : in  std_ulogic_vector(width-1 downto 0);    -> in der Component Dekleration
   .....


Wie programmiert man dies im Mix (Excel Sheet) ?

    Req: kropfisch
    Prio: low
    Solution: partially implemented (strings can be used now)
        Missing: cannot have different strings as ::high/::low and how should we
            define s.th. for a port different from the connected signal?
    Solved: wig20031000

- 20031008f/Req: Attach signal only if used above, else attach open
    E.g. a signal is wired to a port, but not used outside of that module.
    Testcase: padio2.xls

    Req: mpit
    Prio: medium
    Solved: wig20031013
    Testcase: autoopen, padio2
    
- 20031008e/Bug: Intermediate path name mismatch if subdirectory (-out)
  is used to write.

    Req: mpit
    Prio: medium
    Solved: wig20031010

- 20030702b/Req: helper tool: read in entity description and create ExCEL sheet skelton
    Columns:
            ::name, ::type, ::mode, ::in, ::out, ::descr
    or:
    -- VHDL/Verilog entities einlesen und in MIX Format konvertieren:
    Signalname, Type, Mode, ::in, ::out, ::descr, ... als Grundlageninfrastruktur zur VerfÃ¼gung stellen.
	allgemein: -create    create all needed sheets in Excel. If arguments are *.v or *.vhd, convert these
	into suitable excel sheets (either one per entity or a common one).

    Req: mpallas
    Prio: medium
    Solved: wig (-import/-init switch )


- 20031007a/Bug: signals with lower bound "0" forgets this bound
testcase mde-d/signal alp, green, blue, ....
Reason: error in generator parser ("0" is not tested ...)

    Req: mpallas
    Prio: medium
    Solved: wig20031007

- 20030928a/Req: remove trailing ; from Verilog port maps, too

    Req: mpallas
    Prio: medium
    Solved: wig20031006


- 20030905c/Bug: Verilog input port, bad assignment

noch ein MIX-Verilog-Problem:
Signale, die Ã¼ber eine generierte MIX-Hierarchie verdrahtet werden sind nicht korrekt 
beschaltet. Dies liegt daran, dass MIX in der generierten Hierarchieebene 'assign' 
Statements auf alle IOs einbaut, im Falle eines Input Ports sollte eigentlich das interne 
Signal den Wert des Ports zugewiesen bekommen, das ist in MIX aber genau 
andersrum implementiert. Damit wird einem Input-Port der (nicht initialisierte) 
Signalwert eines internen Signals zugewiesen und schon geht nichts mehr...

Die LÃ¶sung ist, fÃ¼r Input Ports die beiden Seiten des assigns zu vertauschen.

    Req: mpallas
    Prio: high
    Done: wig20030908
    Testcase: e.g. bitsplice/verilog ....

- 20030904a/Bug: MIX refuses to process open worksheet ..
    new bug, sneaked in when adding path checking

    Req: mpallas
    Prio: high
    Fixed: wig20030905 (really, automatic testcases missing)


- 20030905a/Req: Parameters in/for Verilog

    Moduldefinition:

module i2c(
    clk,
    reset_n ,
    // ------------------ C_BUS Interface --------------//
    cpu_wr,
    cpu_rd,
    cpu_rd_commit,
    c_add,
    c_bus_in,
    c_iic_obus,
    c_iic_rdy,
    iic_int,
    // ------------------ I2C BUS Interface -------------//
    i2ccl_o,
    i2cda_o,
    i2ccl_i,
    i2cda_i  //  i2c bus port
);

parameter          iic_cbus_base_addr  = 13'h0000;            // cbus base address
...
endmodule


Modulinstanziierung mit Parameteruebergabe:

...

i2c # (13'h08C0) i2c_i1(	// I2C interface #1 (I2C1)
 .c_add(cbus_addr),
 .c_bus_in(cbus_in),
 .c_iic_obus(c_iic1_obus),
 .c_iic_rdy(c_iic1_rdy),
 .clk(clk108),
 .cpu_rd(cbus_rd),
 .cpu_rd_commit(cbus_rd_commit),
 .cpu_wr(cbus_wr),
 .i2ccl_i(i2ccl_in_io),
 .i2ccl_o(i2ccl_out_io),
 .i2cda_i(i2cda_in_io),
 .i2cda_o(i2cda_out_io),
 .iic_int(iic1_int),
 .reset_n(resetn)
);// End of Generated Instance Port Map for i2c_i1

...


Wie es mit mehreren Parametern ist weiss ich nicht, wir benoetigen das derzeit auch 
nicht. Vielleicht kannst Du mal einen Verilog-Experten (Jonathan Bradford ?) zu Rate 
ziehen. Insbesondere konnte mir im MDE-Team niemand sagen, ob mehrere Parameter 
in einer definierten Reihenfolge zu uebergeben sind oder nicht.


    Req: mpallas
    Prio: high

    Done: wig 20030908
    Testcase: generic/verilog
- 20030905b/Bug: Fixes for strings as bounds

    see M. Kropfitsch Mail from 29th Aug.

    done: wig (only a "hack"???)

- 20030729a/Bug: Konstanten Verilog

    die Konstantendefinition in der Verilog Ausgabe von MIX ist
    noch immer falsch:
		`define mix_const_0_c 16`"0101100010110000"
    sollte
    `define mix_const_0_c 16`b0101100010110000
    sein.

    Req: mpallas
    Prio: medium
    Fixed: wig200308xx
    Testcase: constant/verilog

- 20030728b/HOWTO: 2)pad werden als components deklariert und in die Configuration eingetragen

    Req: mpit
    Prio: high
    

Add:
    %NCD% to ::use column
      (no component declaration)

- 20030812a/Bug: IO does not work for Verilog

    Req: mpallas
    Prio: high
    Solution: added "inout" port to Verilog, testcase io\verilog

- 20030728a/Bug:  1)pad_osc: xo port is in  

    Req: mpit
    Prio: high
    Solution: any pad connection not known to MIX defaults to in. Please use
    MIXCFG iocell.in list,foo,bar
    MIXCFG iocell.out d_i,
    MIXCFG iocell.inout pad_io

- 20030730a/Req: typecast request ...

Wie kann ein Typecast duchgefuehrt werden?

lm_y0_p6 _o: out std_ulogic_vector (3 downto 0);
lm_y_o: out std_logic_vector(3 downto 0);
lm_y0_p6 _o <= std_ulogic_vector (lm_y_o)

    Req: michaelkropfitsch
    Prio: low

    Idea: While you find "type_mismatch", consider an matrix of allowed conversion to
    put in place if defined.
    Add attribute %::typecast% and/or to port description:
        signal_a   typea inst_a/port_a#typeb  -> signal typea signal_a;
                                                    signal_a <= typea( port_a );
                                                    entity inst_a ... port
                                                        port_a inout type_b ..


    Solution: done (tested by kropfitsch):
        attach typecast function like port'typefunc
                    ::type sig_type
                -> signal : in|out|inout sig_type [ ( N downto M ) ]
                    component port
                        port : typefunc
                    instances:
                        port map
                            sig_func( port ) => signal 


- 20030404b/CR: Improve delta/ExCEL mode:
    add ::header tags to stringify
    split deltas into different columns

    Done: old is green, new gets red;
        minor issues: old color stays, if headers change we are lost, again ...

- 20030403a/CR: add signal between constant and port map
    Req: pallas
    Prio: medium
    Done: wig20030404
    Testcase: constant (updated output)

- 20030311d/Check: Complain about unrestricted busses ( ..._vector missing High/Low).
    Req: wig
    Prio: medium

- 20030311b/Bug?: Check mde-b_real / cgs_ramclk / cgs_ramclk_s (i58_core)
    Req: Pallas
    Done: by aging :-) (works now)
    
- 20030311a/Bug: Check mde-b_real / cl24_init_frame
    Req: Pallas
    Done: by aging :-) (works now)

- 20030228a/Feature: Write out evaluated contents of mix.cfg (and timestamp) and
   command line switches and %EH to CONF sheet!
   Reason: can be reevaluated on backend side, catch differences
   
   Req: wig
   Prio: medium
    Done: print CONF sheet

   
- ::variants: Default eq. "", if -variant VAR select Default + VAR.
  ::variants := VAR1,VAR2,Default
  ::variants := ""

    Done: o.k. (see documentation)

- 20030730f/Bug:

1) hinter der `timescale 1ns/1ps; Anweisung steht noch ein Semikolon am Ende,
    das da nichts zu suchen hat.

    Req: mpallas
    Prio: High
    Solution: wig20030730, changed in MixWriter

- 20030730e/Bug:

2) im `define <bla> 16Â´b1111000011110000 muss zwischen der Bitbreite und
    dem Bitvektor (und nur dort !) ein 'Tick' und kein 'Backtick' stehen.

    Req: mpallas
    Prio: High
    Solution: wig20030731, changed in MixWriter, maybe further processing is needed

- 20030730d/Bug:

3) zusammengesetzte Signale in der Instanziieruzng:

sowas geht in Verilog nicht:

...
   .svm_o[7:0](vs_a_p_i), // __W_PORT
   .svm_o[9:8](svm_vs_b_p), // __W_PORT
...

es muss vielmehr (wie in VHDL) erst zusammengesetzt und dann zugewiesen werden:

...
   .svm_o(svm_vs_b_p & vs_a_p_i),
...

    Req: mpallas
    Prio: high
    Solution: reprogramm "port_map" ....

- 20030811c/Bug: missing assing before Verilog constants:

    Beispiel MDE-Toplevel (%HIGH% und %LOW%):

    assign mix_logic1 = 1'b1;
    assign mix_logic0 = 1'b0;

    Req: mpallas
    Prio: high
    Solution: fixed in MixWriter.pm (appended assign in front of signal assignment )
    
- 20030714a/Bug: do not change _ to - in entity names!

    Req: mpit
    Prio: medium
    Effort: low

    Solved: 20030714wig
    Testcase: no dedicated
        Side effect: most test cases no longer work :-(

- 20030711b/Req: Suppress output of component declaration if component is alredy defined
    in library
    Proposal: add a %NO_COMPONENT_DECLARATION% aka %NDC% to ::use field!

    Req: mpit
    Prio: medium
    Effort: low
    Solved: wig20030711
    Testcases: configuration
    
- 20030711a/Req: Suppress output of configuration if component is taken from library
    Proposal: if W_NO_CONFIG -> will not be added!
    also: %NO_CONFIGURATION%

    Req: mpit
    Prio: medium
    Effort: low
    Solved: wig20030711
    Testcases: configuration
    
- 20030604c/Req: Make nameing schema for IOcells and Pads more flexible.
    e.g. use ::name as name root (not ::type ..)

    Req: pallas
    Prio: medium
    Solved: 20030709wig
    Solution: see pad.name and iocell.name
	Sideeffect: add_inst and add_conn now evaluate all %XXX% keys in the primary key fields.
	Allowed fields are ::COL (other input columns), text macros and postfix macros.
    
- 2003070a/Bug: output.path is not implemented!
    Cannot write datato dir other than cwd()
    
    Req: mpit
    Prio: medium
    Impl: 20030703wig  ( -dir DIRECTORY ) + documentation
    Tested: wig20030705
    Status: Solved

- 20030604a/Bug: Do not generate configuration for Verilog instances in common
   config file
   
    Req: wig
    Prio: low
    Solved: wig
    
- 20030228c/Feature: write arch, conf and entity into one file
  per entitiy (command line switch)
    Req: wig
    Prio: low
    Solution: set -combine option (or set outarch=COMB, outenty=COMB, outconf=COMB)
   
- 20030227b: 
    Write out ENTY-e.vhd.N if a entity gets instantiated several times
    Requested: wig
    Prio: low
    Solved: think so ...

- Accept %::COL% in :name and ::inst columns
  early expansion required!
  wig20030124

- 20030702a/Req: User defined macro input
    -conf macro.%MY_MACRO%=MY_MACRO_VALUE

    Req: wig
    Prio: medium
    Workaround: add
    MIXCFG macro.'%MY_MACRO%' MY_MACRO_VALUE
    to mix.cfg configuration file.
    Solved: wig20030708
    
- Open files, delay close until EOF processing
  Done: wig

- 20030311c/Feature: How to handle I/O ? What to do with signals not connected to
  leaf blocks? Missing drivers? Missing loads?

    wig: I/O ports are now brought up to their TOP cell.
    TOP is defined to be the daughter(s) of testbench (if not specified by the -top
    switch.
    Done: release_20030401

- 20030331a/bug: ::variant and generator
    generated instances are added, even if ::variant does deselect that statement

    Req: wig
    Prio: medium
    Fixed: 20030331
    
- 20030325b/bug: Constant definition

in MIX wird folgendes definiert:
std_ulogic_vector   15   0   C               0x58B0   cgu_logic_i1/signature_val

danach wird folgendes VHDL generiert (cgu-rtl-a.vhd):					
...
signal	mix_const_0	: std_ulogic_vector(15 downto 0); 
...
mix_const_0 <= "22704";
...

besser wÃ¤re im VHDL:
constant mix_const_0	: std_ulogic_vector(15 downto 0) := 16#58B0#;

wig: conversion to "101010" required for std_[u]logic_vector

Req: pallas
Prio: medium
Fixed: release_20030401
Testcase: constants.xls


- 20030325a/bug:
    constant signal assignments happens also inside of instance (not just in
    architecture of parent instance)
    Req: wig
    Prio: medium
    Fixed: wig (aeport data structure had entries with only load's and driver's)


- 20030313e/Bug: Allow "constant" assignments on bus splices
    This works today! leave the ::name field empty or give the constant a name
    different from the signal/port you want to assign to.
    Req: wig
    Prio: medium
    Fixed: n/a
    

- 20030313d/Bug: Do bus/bit/port handling in signal assigments, not in port maps!
    Req: pallas
    Prio: High
    Comment: Actually this seems not to be necessary.

    
- 20030313f/Feature: ExCEL chart diff (might be duplicate)
    Create "DELTA" chart, stringfy input and run through "Text::diff"
    Nameing: D_CONN, D_CONF, D_HIER, ...
    
    Req: wig
    Prio: medium
    Done: wig20030324, enabled by -delta switch

- 20030313c/Feature: Detect generated port in a row and combine (might be
    done best on the intermediate data?)
    Req: wig
    Prio. Medium
    Done: wig20030324, handled by bits functions

- bug/20030226b: check nreset signal
    Done: wig20030324
    Testcase: mde_tests.xls

- 20030311e/Bug: Reenable ExCEL warnings after MIX run (otherwise you will never
    see warnings again and might loose work).
    Req: wig
    Prio: medium
    Done: wig20030324

- 20030226d: wiring still does not work as expected:
      port maps and entitiy may have name only once.
      combination has to be done in signal assignment
    Done: 20030324wig
    Testcase: all of mde_tests.xls

- 20030221c: Add command args line to all output files ...
   1. intermediate: ::comment ??
     Done wig20030221
   2. output: add to header.
     Done wig20030221
    
- Fold/Condense multiple entries (e.g. comments, ::in, ::out)
    Done: wig20030324
    
- Concatenate busses (e.g. if bits are defined).
    Done: wig20030324

- Defaults for connections:
    bit -> std_ulogic (done)
    bus/vector -> std_ulogic_vector (if type empty and low and high defined)
    generic -> integer

    req. sb20030117
    Done: 2ig20030324

- 20030220g: Add <CR> into ::in and ::out cells, recognize in inout
   done/wig20030220, rel. 1.7 MixUtils
   Issue: late insertion not really handeled by regular "parse_macro"
    
- 20030220h: Bug section:
    			p_mix_cp_lcmd_6_6_gi	: in	std_ulogic_vector(6); -- __W_SINGLEBITBUS
    should read as:
                    p_mix_cp_lcmd_6_6_gi : in std_ulogic; -- __I_SINGLEBITREDUCED

    Req: mpallas
    Prio: medium (workaround: manual edit)
    Testcase: bitsplice / CONN / TestMDE_1 (wig20030312)
    Done: wig    

- 20030220f: Port<->Signal assignment depends on IN vs. OUT
    Done: wig

    
- 20030317a/Bug: Missing Port in component
    sbist_fail_ fehlt an ifu_top (kommt aus ga, Pin8, 9)
    Req: pallas
    Prio: high
    Done: 20030324wig
    Testcase: mde_tests

- 20030227a: File name generation:
      ENTY-e.vhd
      ENTY-ARCH-a.vhd
      ENTY-ARCH-CONF-c.vhd
          (whole name equals ::conf column, but _ -> -)
      
    Requested: wig
    Prio: medium
    Done: 20030317

- Add generator comment line to all output:
    -- timestamp
    -- hostname
    -- timestamp and location of all input data
    -- arguments


- 20030228b/Feature:
    Delta mode: Generate Delta to previous output (diff)
        - intermediate
        - backend
    Minimum: Indicate if previous output was the same

    Use: Algorithm::Diff, Text::Diff
    Req: wig
    Prio: low
    Done: 20030317, wig

- 20030313a/Bug: MDE-B_TL.xls gets closed after parsing. Should stay open!
    Req: wig
    Prio: low
    Done: wig (reason: case of filename, use lowercase now)

- 20030312b/Feature: Add user specific configuration file (use home directory)
    Req: wig
    Prio: low
    Done: 20030317wig
        Look for mix.cfg in the following locations:
        ENV{HOME} aka 'HOMEDRIVE' . 'HOMEPATH' or 'USERPROFILE' or 'C:\'
        ENV{PROJECT}
        Order: HOME / HOME / cwd() / -conf (last wins)

- 20030221a:
    Read configuration options from "CONF" sheet
    | MIXCFG | key | value |
    keys are
       generate.output.arch leaf|noleaf
       generate.output.conf leaf|noleaf
       generate.output.enty leaf|noleaf
       .... (only existing keys in EH may be overridden) ....
   Read file in current dir "mix.cfg"
   See also: 20030312b
   
  option: -conf KEY=VAL
  option: -listconf  -> print out list of configuration keys

  Order: builtin < mix.cfg < CONF < command line

Done wig20030221

- 20030220k: Format ExCEL intermediate (column layout, page breaks ...), color, ....
  Priority: low (see 20030226c)
  Comment: ExCEL intermediate keeps format from previous runs, now.

- 20030221b: add option: -sheet CONN="CONN_PERLRE", -sheet HIER="HIER_PERLRE" ...

  Done wig20030221


- 20030220a: Add ::architecture column, which defines the architecture name
  Default: RTL
  Requested by St. Bartels
  Done: wig
  Testcase: any


- 20030226a: Do not add configuration for verilog instances
  by: Michael Pallas
  done: wig 20030227
  testcase: sigport.xls/HIER_VERI


- 20030226e: add column for library use:
    e.g.: ::use
    will be added to entity definition and possibly to arch and conf
    syntax:
        ALL:NAME.component,ENTY:NAMEB.component,ARCH:NAMEC,
        CONF:NAMED,NAMEE

    the ALL|ENTY|ARCH|CONF keyword selects into which files the use
    statement gets generated. Default is "ENTY".
    Capitalization does not matter.
    ->

    library NAME;
    use NAME.component.ALL;

    req: Michael Pallas   
    done: wig20030227
    test case: sigport.xls/HIER_USE
    

- 20030226c: Keep ExCEL output format in -mixed.xls if possible.
  wig
  done 20030226
  

    - Make sure "0" is not going to become "<spc>" (wig20021219)
    fixed in MixUtils, 20030110

     - Keep already open files open after end
     impl. 20030113

    - Add signal width for busses before outputing ... (if width is defined for bus and in/out has >none<)
    fixed in MixParser, wig20030113 