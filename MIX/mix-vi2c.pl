#!/bin/sh -- # -*- perl -*- -w
# TODO: Get better startup (look in FAQ ...)
eval 'exec $M_PERL -S $0 ${1+"$@"}'
if 0; # dynamic perl startup; suppress preceding line in perl

# eval '(exit $?0)' && eval 'exec perl -S $0 ${1+"$@"}' || eval 'exec perl -S $0 $argv'
# if 0; # dynamic perl startup

#
# +-----------------------------------------------------------------------+
# |                                                                       |
# |   Copyright Micronas GmbH, Inc. 2002.                        |
# |     All Rights Reserved.                     |
# |                                                                       |
# |                                                                       |
# | THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF MICRONAS GMBH |
# | The copyright notice above does not evidence any actual or intended   |
# | publication of such source code.                                      |
# |                                                                       |
# +-----------------------------------------------------------------------+

# +-----------------------------------------------------------------------+
# | Id              : $Id: mix-vi2c.pl,v 1.3 2003/12/04 14:39:20 abauer Exp $
# | Name         : $Name:  $
# | Description  :$Descripton$
# | Parameters  : -
# | Version       : $Version$
# | Mod.Date    : $Date: 2003/12/04 14:39:20 $
# | Author        : $Author: abauer $
# | Phone         : $Phone$
# | Fax             : $Fax$
# | Email         : $Email$
# |
# | Copyright (c)2002 Micronas GmbH. All Rights Reserved.
# | MIX proprietary and confidential information.
# |
# +-----------------------------------------------------------------------+

# +-----------------------------------------------------------------------+
# |
# | Changes:
# | $Log: mix-vi2c.pl,v $
# | Revision 1.3  2003/12/04 14:39:20  abauer
# | *** empty log message ***
# |
# | Revision 1.2  2003/12/04 14:39:10  abauer
# | *** empty log message ***
# |
# | Revision 1.1.1.1  2003/02/03 12:56:44  wig
# | Importing pilot release of MIX tools
# |
# |
# +-----------------------------------------------------------------------+

# --------------------------------------------------------------------------

#******************************************************************************
# Other required packages
#******************************************************************************

use strict;
use Cwd;
use File::Basename;
use Getopt::Long qw(GetOptions);
use Pod::Text;
# use diagnostics; # -> will be set by -debug option
# use English;       # -> will not need this, just consumes performance

# These packages need to be installed, too
# use lib 'h:\work\x2v\lib\perl'; ##TODO: Rewrite that to a generic place ....

use vars qw($pgm $base $pgmpath $dir);

$dir = "";
($^O=~/Win32/) ? ($dir=getcwd())=~s,/,\\,g : ($dir=getcwd());

# Set library search path to:
#   \PATH\PA\prg
#    use lib \PATH\PA\lib\perl
#    use lib \PATH\lib\perl
#    use lib `cwd`\lib\perl
#    use lib `cwd`..\lib\perl
# ...
BEGIN{
    ($^O=~/Win32/) ? ($dir=getcwd())=~s,/,\\,g : ($dir=getcwd());    

    ($pgm=$0) =~s;^.*(/|\\);;g;
    if ( $0 =~ m,[/\\],o ) { #$0 has path ...
        ($base=$0) =~s;^(.*)[/\\]\w+[/\\][\w\.]+$;$1;g;
        ($pgmpath=$0) =~ s;^(.*)[/\\][\w\.]+$;$1;g;
    } else {
        ( $base = $dir ) =~ s,^(.*)[/\\][\w\.]+$,$1,g;
        $pgmpath = $dir;
    }
}

use lib "$base/";
use lib "$base/lib/perl";
use lib "$pgmpath/";
use lib "$pgmpath/lib/perl";
use lib "$dir/lib/perl";
use lib "$dir/../lib/perl";
#TODO: Which "use lib path" if $0 was found in PATH?

use Log::Agent;
use Log::Agent::Priorities qw(:LEVELS);

use Micronas::MixUtils qw ( mix_init open_input mix_getopt_header init_ole %EH ); 
use Micronas::MixParser;
use Micronas::MixWriter;

##############################################################################
# Prototypes (generated by "grep ^sub PROG | sed -e 's/$/;/'")

#t.b.d...

#******************************************************************************
# Global Variables
#******************************************************************************

$::VERSION="/mix/0.1";

# %EH comes from Mic::MixUtils ; All the configuration Environment will be there

#
# Step 0: Init $0
#
mix_init();               # Presets ....


##############################################################################
#
# Step 1: Read arguments, option processing,
#
# parse command line, print banner, print help (if requested),
# set quiet, verbose
#

#
#

# Add your options here ....
mix_getopt_header(qw(

    ));

# if($OPTVAL{opta} ) { $flag++; }

##############################################################################
#
# Step 2: Open input files one by one and retrieve the tables
# Do a first simple conversion from Excel arrays into array of hashes
#

my $ole = init_ole(); # Start OLE Object ...

# my( $r_connin, $r_hierin);
# ( $r_connin, $r_hierin ) = open_input( @ARGV );

my @avi2c = ();

    for my $i ( @ARGV ) {
	unless ( -r $i ) {
	    logwarn("Cannot read input file $i\n");
	    next;
	}

	my $sheet = Micronas::MixUtils::open_excel( $i, $EH{'vi2c'}{'xls'} ); # Sheetname ...
	my @vi2c = Micronas::MixUtils::convert_in( "vi2c", $sheet );

	push( @avi2c, @vi2c );	# Append
        
    }

#
print 1;

#!End
