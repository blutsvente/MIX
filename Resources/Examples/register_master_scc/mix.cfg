# $Id: mix.cfg,v 1.3 2009/02/27 09:29:39 lutscher Exp $
#
# MIX base configuration for MIC32C project
# parameters can be overwritten by unit-specific .cfg files, see Makefile
#
# $Log: mix.cfg,v $
# Revision 1.3  2009/02/27 09:29:39  lutscher
# *** empty log message ***
#
# Revision 1.2  2008/12/18 10:30:17  lutscher
# updates
#
# Revision 1.1  2008/11/17 09:27:57  lutscher
# initial release
#
# Revision 1.2  2008/05/09 12:53:35  lutscher
# update for vctv
#
# Revision 1.1  2008/03/17 12:38:12  lutscher
# initial release
#
#

# define output dirs
MIXCFG output.path v
MIXCFG output.path_include include
MIXCFG internal.path tmp
MIXCFG intermediate.path tmp
MIXCFG intermediate.keep 1

#
# Project-wide MIX settings (don't change without consulting system architect)
#
MIXCFG output.generate.portmapsort input
MIXCFG output.language.verilog ansistyle,2001param
MIXCFG reg_shell.read_multicycle 0
MIXCFG reg_shell.infer_clock_gating 0
MIXCFG reg_shell.infer_sva 1
MIXCFG reg_shell.datawidth 32
MIXCFG reg_shell.infer_reset_syncer 0
MIXCFG reg_shell.enforce_unique_addr 1
MIXCFG postfix.PREFIX_INSTANCE %EMPTY%
MIXCFG postfix.POSTFIX_INSTANCE _i
MIXCFG postfix.POSTFIX_PORT_OUT _o
MIXCFG postfix.POSTFIX_PORT_IN _i
MIXCFG postfix.POSTFIX_FIELD_OUT _par_o
MIXCFG postfix.POSTFIX_FIELD_IN _par_i
MIXCFG reg_shell.clone.reg_naming %R_%N
MIXCFG reg_shell.clone.field_naming %F_%N

# create separate files for each module
MIXCFG outarch ARCH
MIXCFG outenty ENTY
MIXCFG outconf CONF

# disable check for lower-case ports
MIXCFG check.name.all na

# use signal name as port name
# MIXCFG port.generate.name signal

# type of register-master (don't change)
MIXCFG i2c.regmas_type VGCA

#
# register-space cloning parameters
#

# number of clones
MIXCFG reg_shell.clone.number 0

# number of address bits reserved for every clone
MIXCFG reg_shell.clone.addr_spacing 7

# specify whether every clone has its unique clock domain
MIXCFG reg_shell.clone.unique_clocks 1

#
# user settings for register-shell and hierarchy generation
#

# IMPORTANT: sheet name in register-master xls file
MIXCFG i2c.xls SCC

# define view to generate
MIXCFG reg_shell.type HDL-vgch-rs

MIXCFG reg_shell.addrwidth 11

# name of primary clock and reset (also OCP bus clock)
MIXCFG reg_shell.bus_clock clk_sci
MIXCFG reg_shell.bus_reset res_sci_n

# vplan reference
MIXCFG reg_shell.e_vr_ad.vplan_ref MIC32 SCI Registers

# if 1, create one config register block per clock domain
MIXCFG reg_shell.multi_clock_domains 1

# read-pipeline generation control; the value is the number of address bits, for which
# a pipeline stage will be inserted; set to 0 or high value to disable
MIXCFG reg_shell.read_pipeline_lvl 6

# naming scheme for fields, the naming goes according to placeholders:
# %[<u|l>]<D|R|F|N>
# D domain name
# R original name of register
# F original name of field (only availabe in field_naming)
# N decimal number (here: an arbitrary id)
# u or l force upper/lowercase (optional)
MIXCFG reg_shell.field_naming %F

# if 1, adds register-value-takeover output port for SCC
MIXCFG reg_shell.add_takeover_signals 0

# Verilog file prefix
MIXCFG reg_shell.regshell_prefix frcs_rs

# end
