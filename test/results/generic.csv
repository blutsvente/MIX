:=:=:=>HIER
::ign;::gen;::variants;::parent;::inst;::lang;::entity;::config;::comment
;;;testbench;inst_t;VHDL;inst_t_e;inst_t_e_rtl_conf;
;;;inst_t;inst_a;VHDL;inst_a_e;inst_a_e_rtl_conf;
;;;inst_a;inst_aa;VHDL;inst_aa_e;inst_aa_e_rtl_conf;
;;;inst_a;inst_ab;VHDL;inst_ab_e;inst_ab_e_rtl_conf;
;;;inst_a;inst_ac;VHDL;inst_ac_e;inst_ac_e_rtl_conf;
;;;inst_a;inst_ad;VHDL;inst_ad_e;inst_ad_e_rtl_conf;
;;;inst_a;inst_ae;VHDL;inst_ae_e;inst_ae_e_rtl_conf;
;;Off;inst_t;inst_b;VHDL;inst_b_e;inst_b_e_rtl_conf;
;;Off;inst_t;inst_c;VHDL;inst_c_e;inst_c_e_rtl_conf;
;;Off;inst_t;inst_d;VHDL;inst_d_e;inst_d_e_rtl_conf;
;;;inst_t;inst_e;VHDL;inst_e_e;inst_e_e_rtl_conf;
;;;inst_e;inst_ea;VHDL;inst_ea_e;inst_ea_e_rtl_conf;
;;Off;inst_e;inst_eb;VHDL;inst_eb_e;inst_eb_e_rtl_conf;
;;Off;inst_e;inst_ec;VHDL;inst_ec_e;inst_ec_e_rtl_conf;
;;Off;inst_e;inst_ed;VHDL;inst_ed_e;inst_ed_e_rtl_conf;
;;Off;inst_e;inst_ee;Verilog;inst_ee_e;inst_ee_e_rtl_conf;
;;Off;inst_e;inst_ef;Verilog;inst_ef_e;inst_ef_e_rtl_conf;
;;Off;inst_e;inst_eg;Verilog;inst_eg_e;inst_eg_e_rtl_conf;
;;Off;inst_ea;inst_eaa;VHDL;inst_eaa_e;inst_eaa_e_rtl_conf;
;;Off;inst_ea;inst_eab;Verilog;inst_eab_e;inst_eab_e_rtl_conf;
;;Off;inst_ea;inst_eac;Verilog;inst_eac_e;inst_eac_e_rtl_conf;
;;Off;inst_eb;inst_eba;VHDL;inst_eba_e;inst_eba_e_rtl_conf;
;;Off;inst_eb;inst_ebb;VHDL;inst_ebb_e;inst_ebb_e_rtl_conf;
;;Off;inst_eb;inst_ebc;Verilog;inst_ebc_e;inst_ebc_e_rtl_conf;
;;Off;inst_ec;inst_eca;Verilog;inst_eca_e;inst_eca_e_rtl_conf;
;;Off;inst_ec;inst_ecb;Verilog;inst_ecb_e;inst_ecb_e_rtl_conf;
;;Off;inst_ec;inst_ecc;Verilog;inst_ecc_e;inst_ecc_e_rtl_conf;
;;Off;inst_ed;inst_eda;Verilog;inst_eda_e;inst_eda_e_rtl_conf;
;;Off;inst_ed;inst_edb;Verilog;inst_edb_e;inst_edb_e_rtl_conf;
#;Generate 10 instances;;inst_a;inst_1;Verilog;inst_1_e;inst_1_e_rtl_conf;
;$i(1..10);;inst_a;inst_$i;VHDL;inst_$i_e;inst_$i_e_rtl_conf;
;$i(1..10);;inst_a;inst_m$i;VHDL;inst_m_e;inst_m_e_rtl_conf;
:=:=:=>CONN
::ign;::gen;::bundle;::class;::clock;::type;::high;::low;::mode;::name;::out;::in;::descr;::result
# Constants;;;;;;;;;;;;;
# Test various constant formats;;;;;;;;;;;;;
# Generics;;;;;;;;P or G ??;;;;;
;;Generic;generic_width;gen;something;;;G;generic_w;7;;Type somthing, not valid;
;;Generic;generic_width;;;;;G;generic_w;;inst_aa/PRE_GENERIC;Apply predefined generic;
;;;;;;;;;;;;;
;;Generic;generic_plain;clk;integer;;;G;GENERIC_0;7;inst_aa/WIDTH;Generic width of control;
;;Generic;generic_plain;clk;integer;;;P;GENERIC_0;15;inst_aa/WIDTH;Generic width of control;
;;Generic;generic_pad;clk;integer;;;G;GENERIC_PAD;64;inst_ab/FOO;Generic width for entity;
;;;generic_no_default;clk;integer;;;P;GENERIC_0_AB;31;inst_ab/WIDTH;apply generic value 31 to inst_ab;
;;Generic;generic_no_default;clk;string;;;P;PARAMETER_ND;"""nodefault""";inst_aa/NO_DEFAULT;Generic without default;
;;Generic;generic_no_default;clk;string;;;P;;"""noname""";inst_aa/NO_NAME;Parameter without Name;
;;;;;;;;;;;;;
;$i(1..4),/inst_$i/;Para;generic_macro;clk;integer;;;P;PARAMETER_1_$i;16;inst_$i/FOO;Generic generator, value;
;$i(7..10),/inst_$i/;Para;generic_macro;clk;integer;;;P;PARAMETER_2_$i;32;inst_$i/FOO;Generic generator;
;$i(2..4),/inst_$i/;Generic;generic_macro;clk;integer;;;G;PARAMETER_1_$i;10;inst_$i/FOO;Generic generator, generic;
;$i(6..7),/inst_$i/;Generic;generic_macro;clk;integer;;;G;GENERIC_2_$i;34;inst_$i/FOO;Generic generator;
#!wig200507011: extend testcase: apply another value to GENERIC_0 for another instance!;;;;;;;;;;;;;
;$i(1..5),/inst_$i/;Para;generic_macro;clk;integer;;;P;PARAMETER_1M_$i;15;inst_m$i/FOO;Generic generator, value;
;$i(6..10),/inst_$i/;Para;generic_macro;clk;integer;;;P;PARAMETER_2M_$i;30;inst_m$i/FOO;Generic generator;
;$i(2..4),/inst_$i/;Generic;generic_macro;clk;integer;;;G;PARAMETER_1M_$i;19;inst_m$i/FOO;Generic generator, generic;
#;$i(6..7),/inst_$i/;Generic;generic_macro;clk;integer;;;G;GENERIC_2M_$i;35;inst_m$i/FOO;Generic generator;
