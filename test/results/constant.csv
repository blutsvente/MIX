:=:=:=>HIER
::ign;::gen;::variants;::parent;::inst;::lang;::entity;::config;::comment
;;Default;testbench;inst_t;VHDL;inst_t_e;inst_t_e_rtl_conf;
;;Default;inst_t;inst_a;VHDL;inst_a_e;inst_a_e_rtl_conf;
;;Default;inst_a;inst_aa;VHDL;inst_aa_e;inst_aa_e_rtl_conf;
;;Default;inst_a;inst_ab;VHDL;inst_ab_e;inst_ab_e_rtl_conf;
;;Default;inst_a;inst_ac;VHDL;inst_ac_e;inst_ac_e_rtl_conf;
;;Default;inst_a;inst_ad;VHDL;inst_ad_e;inst_ad_e_rtl_conf;
;;Default;inst_a;inst_ae;VHDL;inst_ae_e;inst_ae_e_rtl_conf;
;;Verilog;testbench;inst_t;Verilog;inst_t_e;inst_t_e_rtl_conf;
;;Verilog;inst_t;inst_a;Verilog;inst_a_e;inst_a_e_rtl_conf;
;;Verilog;inst_a;inst_aa;Verilog;inst_aa_e;inst_aa_e_rtl_conf;
;;Verilog;inst_a;inst_ab;Verilog;inst_ab_e;inst_ab_e_rtl_conf;
;;Verilog;inst_a;inst_ac;Verilog;inst_ac_e;inst_ac_e_rtl_conf;
;;Verilog;inst_a;inst_ad;Verilog;inst_ad_e;inst_ad_e_rtl_conf;
;;Verilog;inst_a;inst_ae;Verilog;inst_ae_e;inst_ae_e_rtl_conf;
;;Off;inst_t;inst_b;VHDL;inst_b_e;inst_b_e_rtl_conf;
;;Off;inst_t;inst_c;VHDL;inst_c_e;inst_c_e_rtl_conf;
;;Off;inst_t;inst_d;VHDL;inst_d_e;inst_d_e_rtl_conf;
;;Default;inst_t;inst_e;VHDL;inst_e_e;inst_e_e_rtl_conf;
;;Default;inst_e;inst_ea;VHDL;inst_ea_e;inst_ea_e_rtl_conf;
;;Verilog;inst_t;inst_e;Verilog;inst_e_e;inst_e_e_rtl_conf;
;;Verilog;inst_e;inst_ea;Verilog;inst_ea_e;inst_ea_e_rtl_conf;
;;Off;inst_e;inst_eb;VHDL;inst_eb_e;inst_eb_e_rtl_conf;
;;Off;inst_e;inst_ec;VHDL;inst_ec_e;inst_ec_e_rtl_conf;
;;Off;inst_e;inst_ed;VHDL;inst_ed_e;inst_ed_e_rtl_conf;
;;Off;inst_e;inst_ee;Verilog;inst_ee_e;inst_ee_e_rtl_conf;
;;Off;inst_e;inst_ef;Verilog;inst_ef_e;inst_ef_e_rtl_conf;
;;Off;inst_e;inst_eg;Verilog;inst_eg_e;inst_eg_e_rtl_conf;
;;Default;inst_ae;inst_aea;VHDL;inst_aea_e;inst_aea_e_rtl_conf;
;;Verilog;inst_ae;inst_aea;Verilog;inst_aea_e;inst_aea_e_rtl_conf;
;;Off;inst_ea;inst_eab;Verilog;inst_eab_e;inst_eab_e_rtl_conf;
;;Off;inst_ea;inst_eac;Verilog;inst_eac_e;inst_eac_e_rtl_conf;
;;Off;inst_eb;inst_eba;VHDL;inst_eba_e;inst_eba_e_rtl_conf;
;;Off;inst_eb;inst_ebb;VHDL;inst_ebb_e;inst_ebb_e_rtl_conf;
;;Off;inst_eb;inst_ebc;Verilog;inst_ebc_e;inst_ebc_e_rtl_conf;
;;Off;inst_ec;inst_eca;Verilog;inst_eca_e;inst_eca_e_rtl_conf;
;;Off;inst_ec;inst_ecb;Verilog;inst_ecb_e;inst_ecb_e_rtl_conf;
;;Off;inst_ec;inst_ecc;Verilog;inst_ecc_e;inst_ecc_e_rtl_conf;
;;Off;inst_ed;inst_eda;Verilog;inst_eda_e;inst_eda_e_rtl_conf;
;;Off;inst_ed;inst_edb;Verilog;inst_edb_e;inst_edb_e_rtl_conf;
:=:=:=>Image
;;;;inst_t
;;;;
;;inst_a;const_01_p;0
;;;;
;;;const_02_p;1
:=:=:=>CONN
::ign;::gen;::bundle;::class;::clock;::type;::high;::low;::mode;::name;::out;::in;::descr;::const_name;::result_vhdl;::result_veri
# Constants;;;;;;;;;;;;;;;NEED TO BE CHANGED!!!
# Test various constant formats;;;;;;;;;;;;;;;wig20030710
;;CONSTANT;;;std_ulogic;;;C;const_01;0;inst_aa/const_01_p;;const_01_c;std_ulogic := '0';'0' 
;;CONSTANT;;;std_ulogic;;;C;const_02;1;inst_aa/const_02_p;;const_02_c;std_ulogic := '1';'1' 
#;;;;;;;;;;;;;;;
;;const_signal;const_signal;;std_ulogic_vector;6;0;;const_03;%CONST%/'64';inst_aa/const_03;Constant Wire, wire port const_wire to constant;const_03_c;"std_ulogic_vector(6 downto 0) := ""64"";";"""64""  // __I_VectorConv"
;;const_signal;const_signal;;std_ulogic_vector;3;0;;const_04;%CONST%/'32';inst_ab/const_04;Constant Wire, wire port const_wire to constant;const_04_c;"std_ulogic_vector(3 downto 0) := ""32""";"""32""  // __I_VectorConv"
;;const_signal;const_signal;;std_ulogic;;;;const_05;1;inst_aa/const_05;Constant Wire, wire port const_wire to constant;const_05_c;std_ulogic := '1';'1' 
;;const_signal;const_signal;;std_ulogic_vector;6;0;;const_06;0xf;inst_ea/const_06_p;Constant Wire, # take literally, but will not work!;const_06_c;"std_ulogic_vector(6 downto 0) := ""0001111""; -- __I_ConvConstant: 0xf";"7`""0001111"""
;;const_signal;const_signal;;std_ulogic_vector;5;0;;;0xf;inst_ea/const_07_p;Constant Wire, # take literally, but will not valid VHDL;mix_const_0_c;"std_ulogic_vector(5 downto 0) := ""001111""; -- __I_ConvConstant: 0xf";"6`""001111"""
;;const_signal;const_signal;;std_ulogic_vector;4;0;;;0;inst_ab/const_08_p;Set to 0;mix_const_1_c;"std_ulogic_vector(4 downto 0) := ( others => '0');";'0' 
;;const_signal;const_signal;;std_ulogic_vector;2;0;;;1;inst_ab/const_09_p;Set to 1;mix_const_2_c;"std_ulogic_vector(2 downto 0) := ( others => '1' );";'1' 
;;const_signal;const_signal;;std_ulogic_vector;3;0;;;1;"inst_ab/const_10_2(2),
inst_ab/const_10_2(0)";Set two pins to 1;mix_const_3_c;"std_ulogic_vector(3 downto 0) := ( others => '1' );";'1' 
;;const_signal;const_signal;;std_ulogic_vector;3;0;;;0;"inst_ab/const_10_2(3),
inst_ab/const_10_2(1)";Set two pins to 0;mix_const_4_c;"std_ulogic_vector(3 downto 0) := ( others => '0' );";'0' 
#;;;;;;;;;;;;;;;
#;;;;;;;;;;"Allow 0x[0-9a-f], 0[0-7], 10101, 'xxxx', 'zzzz', ""abc""";;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
;;Formats;;;std_ulogic;;;;;0;inst_aa/zero_p;;mix_const_5_c;"std_ulogic := '0';";'0' 
;;Formats;;;std_ulogic;;;;;1;inst_aa/one_p;;mix_const_6_c;std_ulogic := '1';'1' 
;;Formats;;;integer;;;;;10;inst_aa/integer_p;;mix_const_7_c;"integer := 10;";10  // __I_ConstNoconv
;;Formats;;;real;;;;;10.2;inst_aa/real_p;;mix_const_8_c;"real := 10.2;";10.2  // __I_ConstNoconv
;;Formats;;;real;;;;;1_000_000.0;inst_aa/under_p;;mix_const_9_c;"real := 1_000_000.0;";1_000_000.0  // __I_ConstNoconv
;;Formats;;;integer;;;;;16#FF#;inst_aa/vhdl_basehex_p;;mix_const_10_c;"integer := 16#FF#;";16#FF#  // __I_ConstNoconv
;;Formats;;;integer;;;;;2#1010_1010#;inst_aa/vhdlbase2_p;;mix_const_11_c;"integer := 2#1010_1010#;";2#1010_1010#  // __I_ConstNoconv
;;Formats;;;real;;;;;2.2E-6;inst_aa/reale_p;;mix_const_12_c;"real := 2.2E-6;";2.2E-6  // __I_ConstNoconv
;;Formats;;;time;;;;;10 ns;inst_aa/int_time_p;;mix_const_13_c;"time := 10 ns;";10 ns 
;;Formats;;;time;;;;;2.27us;inst_aa/real_time_p;;mix_const_14_c;time := 2.27 us;2.27 us 
#;;Formats;;;enumerated;;;;;;;;;;
# Literals for arrays;;Formats;;;;;;;;;;;;;
;;Formats;;;string;;;;;"""ein string""";inst_aa/string_p;;mix_const_15_c;"string := ""ein string"";";"""ein string""  // __I_ConstNoconv"
;;Formats;;;bit_vector;7;0;;;"""11111111""";inst_aa/bit_vector_p;;mix_const_16_c;"bit_vector(7 downto 0) := ""11111111"";";"""11111111""  // __I_VectorConv"
;;Formats;;;bit_vector;7;0;;;"""1010""";inst_ea/bad_width_p;#!Illegal;mix_const_17_c;"bit_vector(7 downto 0) := ""1010""; -- __I_VectorConv";"""1010"""
;;Formats;;;std_ulogic_vector;7;0;;;'01010101';inst_aa/std_ulogic_vector_p;;mix_const_18_c;"std_ulogic_vector(7 downto 0) := ""01010101"";";"""01010101""  // __I_VectorConv"
;;;;;;;;;;;;;;;
# Detect error: bind port to two different constants;;;;;;;;;;;;;;;
;;Constant;;;std_ulogic;;;;;0;inst_ea/zero_dup_e;#Illegal;mix_const_19_c;"std_ulogic := '0';";'0'
;;;;;std_ulogic;;;;;1;inst_ea/zero_dup_e;#Illegal;mix_const_20_c;"std_ulogic := '1';";'1'
#;;;;;;;;;;;;;;;
# Bind one constant to two different ports;;;;;;;;;;;;;;;
;;;;;std_ulogic_vector;7;0;;;'10101100';inst_aa/vector_duo_1, inst_aa/vector_duo_2;;mix_const_21_c;"std_ulogic_vector(7 downto 0) := ""10101100"";";"""10101100""  // __I_VectorConv"
# Bind one constant to two different instances;;;;;;;;;;;;;;;
;;;;;std_ulogic_vector;7;0;;;'10101100';inst_aa/inst_duo_1, inst_ab/inst_duo_2;;mix_const_22_c;"std_ulogic_vector(7 downto 0) := ""10101100"";";"""10101100""  // __I_VectorConv"
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
# Various constant values;;;;;;;;;;;;;;;
;;Std_ulogic;;;std_ulogic_vector;7;0;;;16#FF#;inst_aa/std_u_logic_vport;;mix_const_23_c;"std_ulogic_vector(7 downto 0) := ""11111111""; -- __I_ConvConstant: 16#FF#";"8`""11111111""  // __I_ConvConstant: 16#FF#"
;;Std_ulogic;;;std_ulogic_vector;7;0;;;16#11#;inst_aa/std_u_11_vport;;mix_const_24_c;"std_ulogic_vector(7 downto 0) := ""00010001""; -- __I_ConvConstant: 16#11#";"8`""00010001""  // __I_ConvConstant: 16#11#"
;;Std_ulogic;;;std_ulogic_vector;10;0;;;16#FF#;inst_aa/std_u_logic_vport_ext;;mix_const_25_c;"std_ulogic_vector(10 downto 0) := ""00011111111""; -- __I_ConvConstant: 16#FF#";"11`""00011111111""  // __I_ConvConstant: 16#FF#"
;;Std_ulogic;;;std_ulogic_vector;7;0;;;0xff;inst_aa/std_u_logic_port_02;;mix_const_26_c;"std_ulogic_vector(7 downto 0) := ""11111111""; -- __I_ConvConstant: 0xff";"8`""11111111""  // __I_ConvConstant: 0xff"
;;Std_ulogic;;;std_ulogic_vector;7;0;;;0b01010101;inst_aa/std_u_logic_bin_p;;mix_const_27_c;"std_ulogic_vector(7 downto 0) := ""01010101""; -- __I_ConvConstant: 0b01010101";"8`""01010101""  // __I_ConvConstant: 0b01010101"
;;Std_ulogic;;;std_ulogic_vector;7;0;;;8#07#;inst_aa/std_u_logic_octv_p;;mix_const_28_c;"std_ulogic_vector(7 downto 0) := ""00000111""; -- __I_ConvConstant: 8#07#";"8`""00000111""  // __I_ConvConstant: 8#07#"
;;Std_ulogic;;;std_ulogic_vector;7;0;;;2#11001100#;inst_aa/std_u_logic_binv_p;;mix_const_29_c;"std_ulogic_vector(7 downto 0) := ""11001100""; -- __I_ConvConstant: 2#11001100#";"8`""11001100""  // __I_ConvConstant: 2#11001100#"
;;Std_ulogic;;;std_ulogic_vector;7;0;;;4#3030#;inst_aa/std_u_logic_quadv_p;;mix_const_30_c;"std_ulogic_vector(7 downto 0) := 4#3030#; -- __I_ConvConstant: 4#3030#";4#3030#  // __I_ConvConstant: 4#3030#
;;Std_ulogic;;;std_ulogic_vector;3;0;;;16#ee#;inst_aa/std_u_logic_hexerr_p;;mix_const_31_c;"std_ulogic_vector(3 downto 0) := ""11101110""; -- __E_VECTOR_WIDTH  -- __I_ConvConstant: 16#ee#";"4`""11101110""  // __E_VECTOR_WIDTH  // __I_ConvConstant: 16#ee#"
# Bug 20040329a: single bit in verilog;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;
;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t1;0x0;inst_aa/bug20040329a_t1;;bug20040329a_t1;"constant bug20040329a_t1_c : std_ulogic := 16#0#; -- __I_ConvConstant2:0x0";1'h0
;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t2;0;inst_aa/bug20040329a_t2;;bug20040329a_t2;"constant bug20040329a_t2_c : std_ulogic := '0';";1'b0
;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t3;0b0;inst_aa/bug20040329a_t3;;bug20040329a_t3;"constant bug20040329a_t3_c : std_ulogic := 2#0#; -- __I_ConvConstant3:0b0";1'b0
;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t4;0b0101_0101;inst_aa/bug20040329a_t4;;bug20040329a_t4;"constant bug20040329a_t4_c : std_ulogic := 2#0101_0101#; -- __I_ConvConstant3:0b0101_0101";8'b0101_0101
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
# Request 20040728a: Allow to assign single bits of a bus to constant. Used to create extra port map statements!;;;;;;;;;;;;;;;
;;BusPartAs20040728;;;std_ulogic_vector;7;0;;bus20040728_part;;inst_aa/bus20040728_part_i;;;;
#;;;;;std_ulogic_vector;0;0;;bus20040728_part_c1;0;inst_ab/bus20040728_part_i(2);;;;
#;;;;;std_ulogic_vector;2;0;;bus20040728_part_c2;0;inst_ab/bus20040728_part_i(6:4);;;;
;;;;;;;;;bus20040728_part_c1;0=(2);%BUS%/bus20040728_part;map_const_bus;;;
;;;;;;;;;bus20040728_part_c2;0=(6:4);%BUS%/bus20040728_part;map_const_bus;;;
;;;;;;;;;bus20040728_part;"inst_ab/bus20040728_o1=(1:0),
inst_ab/bus20040728_o2=(3),
inst_ac/bus20040728_oc=(7)";;;;;
# Assign a full bus to zero:;;;;;;;;;;;;;;;
;;BusPartAs20040728;;;std_ulogic_vector;7;0;;bus20040728;0;inst_aa/bus20040728_all_i;;;;
# Constant assignment on top-most instance!;;;;;;;;;;;;;;;
;;BusPartAs20040728;;;std_ulogic_vector;7;0;;bus20040728_top;inst_ab/bus20040728_top_o1=(7:4);inst_aea/bus20040728_top_i;;;;
;;;;;;;;C;bus20040728_top_c1;0=(3:1);%BUS%/bus20040728_top;;;;
;;;;;;;;C;bus20040728_top_c2;1=(0);%BUS%/bus20040728_top;;;;
;;BusPartAs20040728;;;std_ulogic_vector;7;0;;bus20040728_altop;inst_ab/bus20040728_altop_o1=(7:4);inst_aea/bus20040728_altop_i,inst_ae/bus20040728_altop_i;;;;
;;;;;;;;;bus20040728_altconst;0=(3:1);%BUS%/bus20040728_altop;;;;
;;;;;;;;;bus20040728_altconst2;1=(0);%BUS%/bus20040728_altop;;;;
:=:=:=>CONN_DBG
::ign;::gen;::bundle;::class;::clock;::type;::high;::low;::mode;::name;::out;::in;::descr;::const_name;::result_vhdl;::result_veri
# Constants;;;;;;;;;;;;;;;NEED TO BE CHANGED!!!
# Test various constant formats;;;;;;;;;;;;;;;wig20030710
#;;CONSTANT;;;std_ulogic;;;C;const_01;0;inst_aa/const_01_p;;const_01_c;std_ulogic := '0';'0' 
#;;CONSTANT;;;std_ulogic;;;C;const_02;1;inst_aa/const_02_p;;const_02_c;std_ulogic := '1';'1' 
#;;;;;;;;;;;;;;;
#;;const_signal;const_signal;;std_ulogic_vector;6;0;;const_03;%CONST%/'64';inst_aa/const_03;Constant Wire, wire port const_wire to constant;const_03_c;"std_ulogic_vector(6 downto 0) := ""64"";";"""64""  // __I_VectorConv"
#;;const_signal;const_signal;;std_ulogic_vector;3;0;;const_04;%CONST%/'32';inst_ab/const_04;Constant Wire, wire port const_wire to constant;const_04_c;"std_ulogic_vector(3 downto 0) := ""32""";"""32""  // __I_VectorConv"
#;;const_signal;const_signal;;std_ulogic;;;;const_05;1;inst_aa/const_05;Constant Wire, wire port const_wire to constant;const_05_c;std_ulogic := '1';'1' 
#;;const_signal;const_signal;;std_ulogic_vector;6;0;;const_06;0xf;inst_ea/const_06_p;Constant Wire, # take literally, but will not work!;const_06_c;"std_ulogic_vector(6 downto 0) := ""0001111""; -- __I_ConvConstant: 0xf";"7`""0001111"""
#;;const_signal;const_signal;;std_ulogic_vector;5;0;;;0xf;inst_ea/const_07_p;Constant Wire, # take literally, but will not valid VHDL;mix_const_0_c;"std_ulogic_vector(5 downto 0) := ""001111""; -- __I_ConvConstant: 0xf";"6`""001111"""
#;;const_signal;const_signal;;std_ulogic_vector;4;0;;;0;inst_ab/const_08_p;Set to 0;mix_const_1_c;"std_ulogic_vector(4 downto 0) := ( others => '0');";'0' 
#;;const_signal;const_signal;;std_ulogic_vector;2;0;;;1;inst_ab/const_09_p;Set to 1;mix_const_2_c;"std_ulogic_vector(2 downto 0) := ( others => '1' );";'1' 
#;;const_signal;const_signal;;std_ulogic_vector;3;0;;;1;"inst_ab/const_10_2(2),
inst_ab/const_10_2(0)";Set two pins to 1;mix_const_3_c;"std_ulogic_vector(3 downto 0) := ( others => '1' );";'1' 
#;;const_signal;const_signal;;std_ulogic_vector;3;0;;;0;"inst_ab/const_10_2(3),
inst_ab/const_10_2(1)";Set two pins to 0;mix_const_4_c;"std_ulogic_vector(3 downto 0) := ( others => '0' );";'0' 
#;;;;;;;;;;;;;;;
#;;;;;;;;;;"Allow 0x[0-9a-f], 0[0-7], 10101, 'xxxx', 'zzzz', ""abc""";;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;Formats;;;std_ulogic;;;;;0;inst_aa/zero_p;;mix_const_5_c;"std_ulogic := '0';";'0' 
#;;Formats;;;std_ulogic;;;;;1;inst_aa/one_p;;mix_const_6_c;std_ulogic := '1';'1' 
#;;Formats;;;integer;;;;;10;inst_aa/integer_p;;mix_const_7_c;"integer := 10;";10  // __I_ConstNoconv
#;;Formats;;;real;;;;;10.2;inst_aa/real_p;;mix_const_8_c;"real := 10.2;";10.2  // __I_ConstNoconv
#;;Formats;;;real;;;;;1_000_000.0;inst_aa/under_p;;mix_const_9_c;"real := 1_000_000.0;";1_000_000.0  // __I_ConstNoconv
#;;Formats;;;integer;;;;;16#FF#;inst_aa/vhdl_basehex_p;;mix_const_10_c;"integer := 16#FF#;";16#FF#  // __I_ConstNoconv
#;;Formats;;;integer;;;;;2#1010_1010#;inst_aa/vhdlbase2_p;;mix_const_11_c;"integer := 2#1010_1010#;";2#1010_1010#  // __I_ConstNoconv
#;;Formats;;;real;;;;;2.2E-6;inst_aa/reale_p;;mix_const_12_c;"real := 2.2E-6;";2.2E-6  // __I_ConstNoconv
#;;Formats;;;time;;;;;10 ns;inst_aa/int_time_p;;mix_const_13_c;"time := 10 ns;";10 ns 
#;;Formats;;;time;;;;;2.27us;inst_aa/real_time_p;;mix_const_14_c;time := 2.27 us;2.27 us 
#;;Formats;;;enumerated;;;;;;;;;;
# Literals for arrays;;Formats;;;;;;;;;;;;;
#;;Formats;;;string;;;;;"""ein string""";inst_aa/string_p;;mix_const_15_c;"string := ""ein string"";";"""ein string""  // __I_ConstNoconv"
#;;Formats;;;bit_vector;7;0;;;"""11111111""";inst_aa/bit_vector_p;;mix_const_16_c;"bit_vector(7 downto 0) := ""11111111"";";"""11111111""  // __I_VectorConv"
#;;Formats;;;bit_vector;7;0;;;"""1010""";inst_ea/bad_width_p;#!Illegal;mix_const_17_c;"bit_vector(7 downto 0) := ""1010""; -- __I_VectorConv";"""1010"""
#;;Formats;;;std_ulogic_vector;7;0;;;'01010101';inst_aa/std_ulogic_vector_p;;mix_const_18_c;"std_ulogic_vector(7 downto 0) := ""01010101"";";"""01010101""  // __I_VectorConv"
#;;;;;;;;;;;;;;;
# Detect error: bind port to two different constants;;;;;;;;;;;;;;;
#;;Constant;;;std_ulogic;;;;;0;inst_ea/zero_dup_e;#Illegal;mix_const_19_c;"std_ulogic := '0';";'0'
#;;;;;std_ulogic;;;;;1;inst_ea/zero_dup_e;#Illegal;mix_const_20_c;"std_ulogic := '1';";'1'
#;;;;;;;;;;;;;;;
# Bind one constant to two different ports;;;;;;;;;;;;;;;
#;;;;;std_ulogic_vector;7;0;;;'10101100';inst_aa/vector_duo_1, inst_aa/vector_duo_2;;mix_const_21_c;"std_ulogic_vector(7 downto 0) := ""10101100"";";"""10101100""  // __I_VectorConv"
# Bind one constant to two different instances;;;;;;;;;;;;;;;
#;;;;;std_ulogic_vector;7;0;;;'10101100';inst_aa/inst_duo_1, inst_ab/inst_duo_2;;mix_const_22_c;"std_ulogic_vector(7 downto 0) := ""10101100"";";"""10101100""  // __I_VectorConv"
#;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
# Various constant values;;;;;;;;;;;;;;;
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;16#FF#;inst_aa/std_u_logic_vport;;mix_const_23_c;"std_ulogic_vector(7 downto 0) := ""11111111""; -- __I_ConvConstant: 16#FF#";"8`""11111111""  // __I_ConvConstant: 16#FF#"
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;16#11#;inst_aa/std_u_11_vport;;mix_const_24_c;"std_ulogic_vector(7 downto 0) := ""00010001""; -- __I_ConvConstant: 16#11#";"8`""00010001""  // __I_ConvConstant: 16#11#"
#;;Std_ulogic;;;std_ulogic_vector;10;0;;;16#FF#;inst_aa/std_u_logic_vport_ext;;mix_const_25_c;"std_ulogic_vector(10 downto 0) := ""00011111111""; -- __I_ConvConstant: 16#FF#";"11`""00011111111""  // __I_ConvConstant: 16#FF#"
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;0xff;inst_aa/std_u_logic_port_02;;mix_const_26_c;"std_ulogic_vector(7 downto 0) := ""11111111""; -- __I_ConvConstant: 0xff";"8`""11111111""  // __I_ConvConstant: 0xff"
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;0b01010101;inst_aa/std_u_logic_bin_p;;mix_const_27_c;"std_ulogic_vector(7 downto 0) := ""01010101""; -- __I_ConvConstant: 0b01010101";"8`""01010101""  // __I_ConvConstant: 0b01010101"
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;8#07#;inst_aa/std_u_logic_octv_p;;mix_const_28_c;"std_ulogic_vector(7 downto 0) := ""00000111""; -- __I_ConvConstant: 8#07#";"8`""00000111""  // __I_ConvConstant: 8#07#"
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;2#11001100#;inst_aa/std_u_logic_binv_p;;mix_const_29_c;"std_ulogic_vector(7 downto 0) := ""11001100""; -- __I_ConvConstant: 2#11001100#";"8`""11001100""  // __I_ConvConstant: 2#11001100#"
#;;Std_ulogic;;;std_ulogic_vector;7;0;;;4#3030#;inst_aa/std_u_logic_quadv_p;;mix_const_30_c;"std_ulogic_vector(7 downto 0) := 4#3030#; -- __I_ConvConstant: 4#3030#";4#3030#  // __I_ConvConstant: 4#3030#
#;;Std_ulogic;;;std_ulogic_vector;3;0;;;16#ee#;inst_aa/std_u_logic_hexerr_p;;mix_const_31_c;"std_ulogic_vector(3 downto 0) := ""11101110""; -- __E_VECTOR_WIDTH  -- __I_ConvConstant: 16#ee#";"4`""11101110""  // __E_VECTOR_WIDTH  // __I_ConvConstant: 16#ee#"
# Bug 20040329a: single bit in verilog;;;;;;;;;;;;;;;
#;;;;;;;;;;;;;;;
#;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t1;0x0;inst_aa/bug20040329a_t1;;bug20040329a_t1;"constant bug20040329a_t1_c : std_ulogic := 16#0#; -- __I_ConvConstant2:0x0";1'h0
#;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t2;0;inst_aa/bug20040329a_t2;;bug20040329a_t2;"constant bug20040329a_t2_c : std_ulogic := '0';";1'b0
#;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t3;0b0;inst_aa/bug20040329a_t3;;bug20040329a_t3;"constant bug20040329a_t3_c : std_ulogic := 2#0#; -- __I_ConvConstant3:0b0";1'b0
#;;Bug20040329a;;;std_ulogic;;;;bug20040329a_t4;0b0101_0101;inst_aa/bug20040329a_t4;;bug20040329a_t4;"constant bug20040329a_t4_c : std_ulogic := 2#0101_0101#; -- __I_ConvConstant3:0b0101_0101";8'b0101_0101
# Request 20040728a: Allow to assign single bits of a bus to constant. Used to create extra port map statements!;;;;;;;;;;;;;;;
;;BusPartAs20040728;;;std_ulogic_vector;7;0;;bus20040728_part;0=(2), 0=(6:4);inst_aa/bus20040728_part_i;;;;
;;;;;;;;;bus20040728_part;"inst_ab/bus20040728_o1=(1:0),
inst_ab/bus20040728_o2=(3),
inst_ac/bus20040728_oc=(7)";;;;;
# Assign a full bus to zero:;;;;;;;;;;;;;;;
;;BusPartAs20040728;;;std_ulogic_vector;7;0;;bus20040728;0;inst_aa/bus20040728_all_i;;;;
