# +-----------------------------------------------------------------------+
# |
# |   Copyright Micronas GmbH, Munich, 2006. 
# |     All Rights Reserved.
# |  
# | THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF MICRONAS GMBH
# | The copyright notice above does not evidence any actual or intended
# | publication of such source code.
# |
# +-----------------------------------------------------------------------+
#
# +-----------------------------------------------------------------------+
# | Project:    Micronas - MIX / Loggin
# | Modules:    $RCSfile: mixlog.conf,v $
# | Revision:   $Revision: 1.1 $
# | Author:     $Author: wig $
# | Date:       $Date: 2006/03/14 08:15:27 $
# |
# | Copyright Micronas GmbH, 2006
# | 
# | $Header: /tools/mix/Development/CVS/MIX/mixlog.conf,v 1.1 2006/03/14 08:15:27 wig Exp $
# +-----------------------------------------------------------------------+
#
# +-----------------------------------------------------------------------+
# |
# | Changes:
# | $Log: mixlog.conf,v $
# | Revision 1.1  2006/03/14 08:15:27  wig
# | Change to Log::Log4perl and replaces %EH by MixUtils::Globals.pm
# |
# |
# +-----------------------------------------------------------------------+

############################################################
# MIX default logging
#	<= debug will be ignored
#   == info     -> to all
#   == warning  -> to log file
#   >= error    -> to log file and screen    
############################################################
 
log4perl.logger=INFO, SCREEN, LOGFILE
#
# Create log file in current directory:    
# -> WARN and above
log4perl.appender.LOGFILE=Log::Log4perl::Appender::File
log4perl.appender.LOGFILE.filename=./mix.log
log4perl.appender.LOGFILE.mode=append    
log4perl.appender.LOGFILE.layout=PatternLayout
log4perl.appender.LOGFILE.layout.ConversionPattern=%d %p> %F{1}:%L %M - %m%n

# Count all warn and errors ....
# log4perl.appender.LOGFILE.layout.ConversionPattern=[%r] %F %L %c - %m%n

# Filter to match level WARN -> suppress warnings from written to SCREEN
log4perl.filter.NoWarn  = Log::Log4perl::Filter::LevelMatch
log4perl.filter.NoWarn.LevelToMatch  = WARN
log4perl.filter.NoWarn.AcceptOnMatch = false

# We could also filter out a full range:
log4perl.filter.NotScreen         = Log::Log4perl::Filter::LevelRange
log4perl.filter.NotScreen.LevelMin   = WARN
log4perl.filter.NotScreen.LevelMax   = WARN
log4perl.filter.NotScreen.AcceptOnMatch = false

# MIX Filter: count messages and limit number of printed messages
log4perl.filter.MIXFilter = Log::Log4perl::Filter::MIXFilter
log4perl.filter.MIXFilter.AcceptOnMatch = true

log4perl.appender.LOGFILE.Filter = MIXFilter

# log4perl.logger.MIX=WARN, LOGFILE
#
# Log to screen
#  -> ERROR level and above
log4perl.appender.SCREEN=Log::Log4perl::Appender::ScreenColoredLevels
log4perl.appender.SCREEN.stderr  = 0
log4perl.appender.SCREEN.layout = Log::Log4perl::Layout::SimpleLayout
#no: allow "INFO" log4perl.appender.SCREEN.Threshold = ERROR

# log4perl.appender.SCREEN.level = ERROR
log4perl.appender.SCREEN.Filter = NoWarn

# Prevent WARNINGS to root logger ....
# log4perl.additivity.MIX = 0
# log4perl.appender.SCREEN.Filter = MyFilter

#!End